geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1.25, vjust=1.25)) +
theme_bw()
is.na(df$term)
table(is.na(df$term))
table(is.na(df$value))
power
power <- data.frame(term=c('p.int', 'p.x'), proportion=prop.table(
table(df$value<.05, df$term), 2)[c(3,5)])
ggplot(df[df$term=='p.int'| df$term=='p.x',],
aes(x=value)) +
geom_density() + facet_wrap(~term, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1.25, vjust=1.25)) +
theme_bw()
power <- data.frame(term=c('p.x', 'p.int'), proportion=prop.table(
table(df$value<.05, df$term), 2)[c(3,5)])
ggplot(df[df$term=='p.int'| df$term=='p.x',],
aes(x=value)) +
geom_density() + facet_wrap(~term, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1.25, vjust=1.25)) +
theme_bw()
coef.x <- numeric(1000)
p.x <- numeric(1000)
coef.int <- numeric(1000)
p.int <- numeric(1000)
n.subs <- rep(c(15, 20, 40, 50), 250)
#simulate the experiment 1000 times
for (i in 1:1000) {
#N in each cell
X <- rep(c(0, 1), each=n.subs[i])
#generate Y
Y <- 3 + 6*X
#add noise
Y <- Y + rnorm(n.subs, 0, 10)
df <- data.frame(X=X, Y=Y)
m.1 <- lm(Y~X)
coef.int[i] <- m.1$coefficients[1]
p.int[i] <- summary(m.1)$coefficients[7]
coef.x[i] <- m.1$coefficients[2]
p.x[i] <- summary(m.1)$coefficients[8]
}
coef.x <- numeric(1000)
p.x <- numeric(1000)
coef.int <- numeric(1000)
p.int <- numeric(1000)
n.subs <- rep(c(15, 20, 40, 50), 250)
#simulate the experiment 1000 times
for (i in 1:1000) {
#N in each cell
X <- rep(c(0, 1), each=n.subs[i])
#generate Y
Y <- 3 + 6*X
#add noise
Y <- Y + rnorm(n.subs*2, 0, 10)
df <- data.frame(X=X, Y=Y)
m.1 <- lm(Y~X)
coef.int[i] <- m.1$coefficients[1]
p.int[i] <- summary(m.1)$coefficients[7]
coef.x[i] <- m.1$coefficients[2]
p.x[i] <- summary(m.1)$coefficients[8]
}
coef.x <- numeric(1000)
p.x <- numeric(1000)
coef.int <- numeric(1000)
p.int <- numeric(1000)
n.subs <- rep(c(15, 20, 40, 50), 250)
#simulate the experiment 1000 times
for (i in 1:1000) {
#N in each cell
X <- rep(c(0, 1), each=n.subs[i])
#generate Y
Y <- 3 + 6*X
#add noise
Y <- Y + rnorm(n.subs[i]*2, 0, 10)
df <- data.frame(X=X, Y=Y)
m.1 <- lm(Y~X)
coef.int[i] <- m.1$coefficients[1]
p.int[i] <- summary(m.1)$coefficients[7]
coef.x[i] <- m.1$coefficients[2]
p.x[i] <- summary(m.1)$coefficients[8]
}
df <- data.frame(run = rep(seq(1,1000), 4),
value=c(coef.int, coef.x, p.int, p.x),
term=rep(c('intercept', 'x', 'p.int', 'p.x'), each=1000))
power <- data.frame(term=c('p.x', 'p.int'), proportion=prop.table(
table(df$value<.05, df$term), 2)[c(3,5)])
ggplot(df[df$term=='p.int'| df$term=='p.x',],
aes(x=value)) +
geom_density() + facet_grid(n.subs~term, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1.25, vjust=1.25)) +
theme_bw()
df <- data.frame(run = rep(seq(1,1000), 4),
value=c(coef.int, coef.x, p.int, p.x),
term=rep(c('intercept', 'x', 'p.int', 'p.x'), each=1000),
n=n.subs)
proportion=prop.table(
table(df$value<.05, df$term, df$n), 2)
proportion
proportion[3]
?table
?prop..table
?prop.table
proportion=prop.table(
table(df$value<.05, df$term, df$n), c(2,2,2,2))
proportion=prop.table(
table(df$value<.05, df$term, df$n), c(3,2))
proportion
coef.x <- numeric(10000)
p.x <- numeric(10000)
coef.int <- numeric(10000)
p.int <- numeric(10000)
n.subs <- rep(c(15, 20, 40, 50), 2500)
#simulate the experiment 1000 times
for (i in 1:10000) {
#N in each cell
X <- rep(c(0, 1), each=n.subs[i])
#generate Y
Y <- 3 + 6*X
#add noise
Y <- Y + rnorm(n.subs[i]*2, 0, 10)
df <- data.frame(X=X, Y=Y)
m.1 <- lm(Y~X)
coef.int[i] <- m.1$coefficients[1]
p.int[i] <- summary(m.1)$coefficients[7]
coef.x[i] <- m.1$coefficients[2]
p.x[i] <- summary(m.1)$coefficients[8]
}
df <- data.frame(run = rep(seq(1,10000), 4),
value=c(coef.int, coef.x, p.int, p.x),
term=rep(c('intercept', 'x', 'p.int', 'p.x'), each=1000),
n=n.subs)
power <- data.frame(term=c('p.x', 'p.int'), proportion=prop.table(
table(df$value<.05, df$term, df$n), 2)[c(3,5)])
power
prop.table(table(df$value<.05, df$term, df$n), c(3,2))
ggplot(df[df$term=='p.int'| df$term=='p.x',],
aes(x=value)) +
geom_density() + facet_grid(n.subs~term, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B")
ggplot(df[df$term=='p.int'| df$term=='p.x',],
aes(x=value)) +
geom_density() + facet_grid(n~term, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B")
coef.x <- numeric(10000)
p.x <- numeric(10000)
coef.int <- numeric(10000)
p.int <- numeric(10000)
n.subs <- rep(c(15, 20, 40, 50), 2500)
X
Y
m.1
m.1$coefficients
summary(m.1)$coefficients
summary(m.1)$coefficients[7]
coef.x <- numeric(10000)
p.x <- numeric(10000)
coef.int <- numeric(10000)
p.int <- numeric(10000)
n.subs <- rep(c(15, 20, 40, 50), 2500)
#simulate the experiment 1000 times
for (i in 1:10000) {
#N in each cell
X <- rep(c(0, 1), each=n.subs[i])
#generate Y
Y <- 3 + 6*X
#add noise
Y <- Y + rnorm(n.subs[i]*2, 0, 10)
m.1 <- lm(Y~X)
coef.int[i] <- m.1$coefficients[1]
p.int[i] <- summary(m.1)$coefficients[7]
coef.x[i] <- m.1$coefficients[2]
p.x[i] <- summary(m.1)$coefficients[8]
}
head(df)
df <- data.frame(run = rep(seq(1,10000), 4),
value=c(coef.int, coef.x, p.int, p.x),
term=rep(c('intercept', 'x', 'p.int', 'p.x'), each=2500),
n=n.subs)
ggplot(df[df$term=='p.int'| df$term=='p.x',],
aes(x=value)) +
geom_density() + facet_grid(n~term, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B")
head(df)
df <- data.frame(run = rep(seq(1,10000), 4),
coef.int=coef.int, coef.x=coef.x, p.int=p.int, p.x=p.x,
n=n.subs)
df <- data.frame(run = seq(1,10000),
coef.int=coef.int, coef.x=coef.x, p.int=p.int, p.x=p.x,
n=n.subs)
library(reshape2)
df.pvals <- melt(df, id.vars = run, measurevars = c('p.int', 'p.x'))
df.pvals <- melt(df, id.vars = 'run', measurevars = c('p.int', 'p.x'))
df.pvals <- left_join(df.pvals df[,c(1,6)])
df.pvals <- left_join(df.pvals, df[,c(1,6)])
library(ddplyr)
library(dplyr)
df.pvals <- left_join(df.pvals, df[,c(1,6)])
ggplot(df[df$term=='p.int'| df$term=='p.x',],
aes(x=value)) +
geom_density() + facet_grid(n~term, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B")
ggplot(df.pvals, aes(x=value)) +
geom_density() + facet_grid(n~term, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B")
head(df.pvals)
table(df.pvals)
table(df.pvals$variable)
df.pvals <- melt(df, id.vars = 'run', measure.vars = c('p.int', 'p.x'))
df.pvals <- left_join(df.pvals, df[,c(1,6)])
ggplot(df.pvals, aes(x=value)) +
geom_density() + facet_grid(n~term, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B")
head(df.pvals)
ggplot(df.pvals, aes(x=value)) +
geom_density() + facet_grid(n~variable, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B")
prop.table(table(df.pvals$value<.05, df.pvals$term, df.pvals$n))
prop.table(table(df.pvals$value<.05, df.pvals$variable, df.pvals$n))
prop.table(table(df.pvals$value<.05, df.pvals$variable, df.pvals$n), c(2, 3))
coef.x <- numeric(1000)
p.x <- numeric(1000)
coef.int <- numeric(1000)
p.int <- numeric(1000)
#20 in each cell
X <- rep(c(0, 1), each=20)
#simulate the experiment 1000 times
for (i in 1:1000) {
#generate Y
Y <- 3 + 6*X
#add noise
Y <- Y + rnorm(40, 0, 10)
df <- data.frame(X=X, Y=Y)
m.1 <- lm(Y~X)
coef.int[i] <- m.1$coefficients[1]
p.int[i] <- summary(m.1)$coefficients[7]
coef.x[i] <- m.1$coefficients[2]
p.x[i] <- summary(m.1)$coefficients[8]
}
df <- data.frame(run = seq(1,1000),
coef.int=coef.int, coef.x=coef.x, p.int=p.int, p.x=p.x)
df.pvals <- melt(df, id.vars = 'run', measure.vars = c('p.int', 'p.x'))
df.pvals <- left_join(df.pvals, df[,c(1,6)])
prop.table(table(df.pvals$value<.05, df.pvals$variable), 2)
prop.table(table(df.pvals$value<.05, df.pvals$variable), 2)[2]
prop.table(table(df.pvals$value<.05, df.pvals$variable), 2)[3]
prop.table(table(df.pvals$value<.05, df.pvals$variable), 2)[5]
power <- data.frame(term=c('p.x', 'p.int'), prop.table(
table(df.pvals$value<.05, df.pvals$variable), 2)[c(2, 4)])
ggplot(df[df$term=='p.int'| df$term=='p.x',],
aes(x=value)) +
geom_density() + facet_wrap(~term, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1.25, vjust=1.25)) +
theme_bw()
head(df.pvals)
ggplot(df.pvals, aes(x=value)) +
geom_density() + facet_wrap(~variable, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1.25, vjust=1.25)) +
theme_bw()
power <- data.frame(variable=c('p.x', 'p.int'), prop.table(
table(df.pvals$value<.05, df.pvals$variable), 2)[c(2, 4)])
ggplot(df.pvals, aes(x=value)) +
geom_density() + facet_wrap(~variable, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1.25, vjust=1.25)) +
theme_bw()
power <- data.frame(variable=c('p.int', 'p.x'), prop.table(
table(df.pvals$value<.05, df.pvals$variable), 2)[c(2, 4)])
ggplot(df.pvals, aes(x=value)) +
geom_density() + facet_wrap(~variable, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1.25, vjust=1.25)) +
theme_bw()
power
power <- data.frame(variable=c('p.int', 'p.x'), proportion=prop.table(
table(df.pvals$value<.05, df.pvals$variable), 2)[c(2, 4)])
ggplot(df.pvals, aes(x=value)) +
geom_density() + facet_wrap(~variable, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1.25, vjust=1.25)) +
theme_bw()
library(reshape2)
library(dplyr)
library(reshape2)
library(dplyr)
coef.x <- numeric(10000)
p.x <- numeric(10000)
coef.int <- numeric(10000)
p.int <- numeric(10000)
n.subs <- rep(c(20, 40, 50, 100), 2500)
#simulate the experiment 1000 times
for (i in 1:10000) {
#N in each cell
X <- rep(c(0, 1), each=n.subs[i])
#generate Y
Y <- 3 + 6*X
#add noise
Y <- Y + rnorm(n.subs[i]*2, 0, 10)
m.1 <- lm(Y~X)
coef.int[i] <- m.1$coefficients[1]
p.int[i] <- summary(m.1)$coefficients[7]
coef.x[i] <- m.1$coefficients[2]
p.x[i] <- summary(m.1)$coefficients[8]
}
df <- data.frame(run = seq(1,10000),
coef.int=coef.int, coef.x=coef.x, p.int=p.int, p.x=p.x,
n=n.subs)
df.pvals <- melt(df, id.vars = 'run', measure.vars = c('p.int', 'p.x'))
df.pvals <- left_join(df.pvals, df[,c(1,6)])
power <- data.frame(term=c('p.x', 'p.int'), proportion=prop.table(
table(df.pvals$value<.05, df.pvals$term, df.pvals$n), 2)[c(3,5)])
prop.table(
table(df.pvals$value<.05, df.pvals$term, df.pvals$n), 2)
head(df.pvals)
prop.table(
table(df.pvals$value<.05, df.pvals$variable, df.pvals$n), 2)
prop.table(
table(df.pvals$value<.05, df.pvals$variable, df.pvals$n), c(2,3))
prop.table(
table(df.pvals$value<.05, df.pvals$variable, df.pvals$n), c(2,3))[1]
prop.table(
table(df.pvals$value<.05, df.pvals$variable, df.pvals$n), c(2,3))[2]
prop.table(
table(df.pvals$value<.05, df.pvals$variable, df.pvals$n), c(2,3))[3]
prop.table(
table(df.pvals$value<.05, df.pvals$variable, df.pvals$n), c(2,3))[4]
prop.table(
table(df.pvals$value<.05, df.pvals$variable, df.pvals$n), c(2,3))[c(2,4,6,8]
prop.table(
table(df.pvals$value<.05, df.pvals$variable, df.pvals$n), c(2,3))[c(2,4,6,8)]
power <- data.frame(variable=rep(c('p.int', 'p.x'), 4),
n=rep(c(20,40,50,100), each=2)
proportion=
prop.table(table(df.pvals$value<.05,
df.pvals$variable, df.pvals$n),
c(2,3))[c(2,4,6,8,10,12,14,16)])
power <- data.frame(variable=rep(c('p.int', 'p.x'), 4),
n=rep(c(20,40,50,100), each=2),
proportion=
prop.table(table(df.pvals$value<.05,
df.pvals$variable, df.pvals$n),
c(2,3))[c(2,4,6,8,10,12,14,16)])
power
ggplot(df.pvals, aes(x=value)) +
geom_density() + facet_grid(n~variable, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1.25, vjust=1.25)) +
theme_bw()
ggplot(df.pvals, aes(x=value)) +
geom_density() + facet_grid(n~variable, scales='free_y')  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1.25, vjust=1.25)) +
theme_bw()
ggplot(df.pvals, aes(x=value)) +
geom_density() + facet_grid(n~variable, scales='free_y')  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1.25, vjust=2.25)) +
theme_bw()
df.pvals[which(df.pvals$variable=='p.int'),]
ggplot(df.pvals, aes(x=value)) +
geom_density() + facet_grid(n~variable, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1.25, vjust=2.25)) +
theme_bw()
ggplot(df.pvals, aes(x=value)) +
geom_density() + facet_wrap(n~variable, scales='free')  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1.25, vjust=2.25)) +
theme_bw()
ggplot(df.pvals, aes(x=value)) +
geom_density() + facet_wrap(variable~n, scales='free', ncol = 4)  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1.25, vjust=2.25)) +
theme_bw()
input <- commandArgs(trailingOnly = TRUE)
KnitPost <- function(input, base.url = "/") {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("../figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
print(paste0("../_posts/", sub(".Rmd$", "", basename(input)), ".md"))
knit(input, output = paste0("../_posts/", sub(".Rmd$", "", basename(input)), ".md"), envir = parent.frame())
}
KnitPost('Documents/Gits/riddlet.github.io/_drafts/_posts/sim.Rmd')
setwd("~/Documents/Gits/riddlet.github.io/_drafts/_posts")
KnitPost('sim.Rmd')
KnitPost('sim.Rmd')
ggplot(df.pvals, aes(x=value)) +
geom_density() + facet_wrap(variable~n, scales='free', ncol = 4)  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1.25, vjust=1.25), size=10) +
theme_bw()
ggplot(df.pvals, aes(x=value)) +
geom_density() + facet_wrap(variable~n, scales='free', ncol = 4)  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1.25, vjust=1.25), size=4) +
theme_bw()
KnitPost('sim.Rmd')
KnitPost('sim.Rmd')
ggplot(df.pvals, aes(x=value)) +
geom_density() + facet_wrap(variable~n, scales='free', ncol = 4)  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=.25, vjust=1.25), size=4) +
theme_bw()
ggplot(df.pvals, aes(x=value)) +
geom_density() + facet_wrap(variable~n, scales='free', ncol = 4)  +
geom_vline(aes(xintercept=.05), color="#88301B") +
geom_text(data=power, aes(x=Inf, y=Inf, label=paste('Power = ', proportion),
hjust=1, vjust=1.25), size=4) +
theme_bw()
KnitPost('sim.Rmd')
160*2
/60
320/60
library(MASS)
myData   <- rnorm(n, 5, .6)
yourData <- myData  + rnorm(n, 8, .25)
n=100
myData   <- rnorm(n, 5, .6)
yourData <- myData  + rnorm(n, 8, .25)
hisData  <- myData  + rnorm(n, 6, .4)
herData  <- hisData + rnorm(n, 8, .35)
ourData <- data.frame(myData, yourData, hisData, herData)
pairs(~myData+yourData+hisData+herData, data=ourData)
cor(ourData)
cov(ourData)
sqrt(.6)
.6^2
cov(X,Y)
AB = 0 #correlation between dv and iv
, AC = 0 #correlation between dv and covariate
, BC = 0 #correlation between iv and covariate
, N = 100 #number of Ss
, Av = 1 #between-Ss variance in A
, Bv = 1 #between-Ss variance in B
, Cv = 1 #between-Ss variance in C
AC = 0 #correlation between dv and covariate
BC = 0 #correlation between iv and covariate
N = 100
Av = 1
Bv = 1
Cv = 1
s = matrix(c(  Av , sqrt(Av*Bv)*AB , sqrt(Av*Cv)*AC
, sqrt(Av*Bv)*AB , Bv  , sqrt(Bv*Cv)*BC
, sqrt(Av*Cv)*AC , sqrt(Bv*Cv)*BC , Cv), 3, 3 )
s
obs <- mvrnorm(N,rep(0,3),s,empirical=F)
obs
grid = expand.grid(
AB = 0
, AC = c(.1,.5,.9)
, BC = seq(0,.95,.05)
, N = c(10,100)
, iteration = 1:1e4
)
head(grid)
Y   <- rnorm(n, 5, .6)
Cov <- myData  + rnorm(n, 8, .25)
hisData  <- myData  + rnorm(n, 6, .4)
herData  <- hisData + rnorm(n, 8, .35)
?norminv
Cov
qnorm(Cov)
?qnorm
qnorm(.5)
qnorm(rep(.5, 20))
qnorm(rep(seq(.1, .9)))
seq(.1, .9)
seq(.1, .9, by=.1)
qnorm(seq(.1, .9, by=.1))
?ln
log(Cov)
mean(log(Cov))
exp(mean(log(Cov))+sd(log(Cov)))
crv<-exp(mean(log(Cov))+sd(log(Cov)))
Cov > crv
ifelse(Cov > crv, 1, 0)
cat<-ifelse(Cov > crv, 1, 0)
sum(cat)
Y   <- rnorm(n, 5, .6)
Cov <- myData  + rnorm(n, 8, .25)
crv<-exp(mean(log(Cov))+sd(log(Cov)))
ifelse(Cov > crv, 1, 0)
crv<-exp(mean(log(Cov))+sd(log(Cov))*qnorm(.5))
crv
cat<-ifelse(Cov > crv, 1, 0)
cat
sum(cat)
