plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplot(df.melt, aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplot(!is.na(df.melt), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
plot<-ggplot(df.melt[which(df$interventcond != NA),], aes(x=variable, y=value, group=interventcond, color=interventcond))
plot<-ggplot(df.melt[which(df.melt$stereotyped != NA),], aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplot(subset(df.melt$stereotyped != NA), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot<-ggplot(subset(df.melt, df.melt$stereotyped != NA), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplot(subset(df.melt, df.melt$stereotyped == NA), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplotna.omit(df.melt), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
?update
?lmer
library(lme4)
?lmer
head(df.melt$variable-1)
head(df.melt)
fm1 <- lmer(value ~ variable + (variable | subjectnum))
fm1 <- lmer(value ~ variable + (variable | subjectnum), df.melt)
table(subjectnum)
table(df.meltsubjectnum)
table(df.melt$subjectnum)
table#df.melt$variable
table(df.melt$variable)
table(df.melt$stereotyped)
fm1 <- lmer(value ~ variable + (variable | factor(subjectnum)), df.melt)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ variable + (variable | subjectnum), df.melt)
str(df.melt$subjectnum)
fm1 <- lmer(value ~ variable + (1 | subjectnum), df.melt)
head(df.melt)
fm2 <- update(fm1 .~. + interventcond)
fm2 <- update(fm1, .~. + interventcond)
fm3 <- update(fm2, .~. + stereotyped)
anova(fm1, fm2)
anova(fm1, fm3)
anova(fm2, fm3)
anova(fm1, fm3)
fm4 <- update(fm3, .~variable*interventcond*stereotyped)
fm4 <- update(fm3, .~variable*interventcond*stereotyped + (1 | subjectnum))
anova(fm3, fm4)
fm5 <- lm(value ~ variable + interventcond + stereotyped, data=df.melt)
fm5
summary(fm5)
fm5
names(fm5)
fm5$contrasts
fm5$effects
summary(fm5)
df.melt$testnum <- as.numeric(df.melt$variable)
table(df.melt$testnum, df.melt$variable)
df.melt$subjectnum <- factor(df.melt$subjectnum)-1
df.melt$testnum <- as.numeric(df.melt$variable)-1
table(df.melt$testnum, df.melt$variable)
df.melt$testnum <- as.numeric(df.melt$variable)
fm5 <- lm(value ~ testnum + interventcond + stereotyped, data=df.melt)
fm5
summary(fm5)
fm1 <- lmer(value ~ testnum +  (testnum | subjectnum), df.melt)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ testnum +  (testnum | subjectnum), df.melt)
fm1 <- lmer(value ~ testnum +  (testnum | subjectnum), df.melt)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ testnum +  (testnum | subjectnum), df.melt)
fm1 <- lmer(value ~ testnum + (testnum | subjectnum), df.melt)
fm1 <- lmer(value ~ testnum + (testnum|subjectnum), df.melt)
fm5 <- lm(value ~ testnum + interventcond + stereotyped, data=df.melt)
fm5
summary(fm5)
fm1 <- lmer(value ~ testnum-1 + (testnum-1|subjectnum), df.melt)
fm1 <- lmer(value ~ testnum + (1|subjectnum), df.melt)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ testnum + (1|subjectnum), df.melt)
str(subjectnum)
str(df.melt$subjectnum)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
levels(df.melt$variable) <- c('test1', 'test2', 'test3')
df.melt$testnum <- as.numeric(df.melt$variable)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ testnum + (testnum|subjectnum), df.melt)
fm1
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum, color=subjectnum))
plot+geom_line()+
facet_wrap(~stereotyped)
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum, color=interventcond))
plot+geom_line()+
facet_wrap(~stereotyped)
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line()+
facet_wrap(interventcond~stereotyped)
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line()+
facet_grid(interventcond~stereotyped)
fullmodel <- lmer(value ~ testnum*steretyped*interventcond + (testnum|subjectnum), df.melt)
fullmodel <- lmer(value ~ testnum*stereotyped*interventcond + (testnum|subjectnum), df.melt)
fm2 <- update(fmullmodel, .~ testnum*stereotyped + testnum*interventcond + (testnum|subjectnum), df.melt)
fm2 <- update(fullmodel, .~ testnum*stereotyped + testnum*interventcond + (testnum|subjectnum), df.melt)
anova(fullmodel, fm2)
fm4 <- update(fullmodel, .~ testnum + stereotyped + interventcond (testnum | subjectnum), df.melt)
fm4 <- update(fullmodel, .~ testnum + stereotyped + interventcond + (testnum | subjectnum), df.melt)
anova(fullmodel, fm4)
plot(fullmodel)
plot(fm2)
plot(fm3)
plot(fm4)
plot(fm5)
fm4 <- update(fullmodel, .~ testnum + stereotyped + interventcond + (testnum | subjectnum), df.melt)
plot(fm4)
plot(fullmodel)
fullmodel
summary(fullmodel)
MCMCglmm(fullmodel)
mcmcsamp(fullmodel)
library(mcmcglmm)
library('mcmcglmm')
library('MCMCglmm')
install.packages('MCMCglmm')
?MCMCglmm
library(MCMCglmm)
MCMCglmm(fullmodel)
lme4
?lme4
version(lme4)
version()
r.version()
bootmer(fullmodel)
bootMer(fullmodel)
fun <- function(fit){return(fixef(fit))}
bootMer(fullmodel, fun)
help("simulate-mer")
?simulate-mer
?simulatemer
a<-bootMer(fullmodel, fun, sim=1000)
a<-bootMer(fullmodel, fun, nsim = 1000)
summary(a)
names(a)
a[1]
a[2]
summary(a[2])
hist(a[2])
hist(a[2]$t)
hist(a[3])
summary(a[3])
62+55
library(foreign)
df<-read.spss('Desktop/Datasets from Jonathan/BEL AFF NON-WHITE and PREVIOUS.sav')
df<-read.spss('Desktop/Datasets from Jonathan/BEL AFF NON-WHITE and PREVIOUS.sav',to.data.frame = T)
head(df)
df.2<-read.spss('Desktop/Datasets from Jonathan/117BELAFF-CORRECTED.sav')
df.2<-read.spss('Desktop/Datasets from Jonathan/117BELAFF-CORRECTED.sav', to.data.frame = T)
head(df)
head(df.2)
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/Documents/Gits/riddlet.github.io/_drafts/_knitr")
source('~/.active-rstudio-document', echo=TRUE)
head(a)
year <- grep("//d{4}", a$variable, value=T)
head(year)
year <- grep("/\d{4}", a$variable, value=T)
year <- grep("[//d{4}]", a$variable, value=T)
head(year)
?grep
year <- grep("[:digit:]{4}", a$variable, value=T)
head(year)
year <- grep("\\d{4}", a$variable, value=T)
head(year)
library(stringr)
year<-str_match(a$variable, "\\d{4}")
head(year)
head(a$variable)
year<-str_match(a$variable, "[0-9]{4}")
head(year)
str(year)
a$year<-str_match(a$variable, "[0-9]{4}")
head(a)
a<-dcast(a, Restaurant. + Food.Category. + Item_Name. + Menu_Item_ID. + year ~
., value.var = 'value')
a<-dcast(a, Restaurant. + Food.Category. + Item_Name. + Menu_Item_ID + year ~
., value.var = 'value')
str(a)
head(a)
a<-melt(menus, id.vars = c('Restaurant.', 'Food.Category.', 'Item_Name.',
'Menu_Item_ID'))
a$year<-str_match(a$variable, "[0-9]{4}")
a<-dcast(a, Restaurant. + Food.Category. + Item_Name. + Menu_Item_ID + year ~
variable , value.var = 'value')
head(a)
a<-arrange(a, 'Restaurant', 'Item_Name.')
library(plyr)
a<-arrange(a, 'Restaurant', 'Item_Name.')
a<-arrange(a, 'Restaurant.', 'Item_Name.')
a<-arrange(a, 'Restaurant.', 'Item_Name.')
```
a<-arrange(a, 'Restaurant.', 'Item_Name.')
length(a$Restaurant.)
length(a$Item_Name.)
a<-arrange(a, Restaurant., Item_Name.)
head(a)
?gsub
names(a) <- gsub('.', '', names(a))
names(a)
a<-melt(menus, id.vars = c('Restaurant.', 'Food.Category.', 'Item_Name.',
'Menu_Item_ID'))
a$year<-str_match(a$variable, "[0-9]{4}")
a<-dcast(a, Restaurant. + Food.Category. + Item_Name. + Menu_Item_ID + year ~
variable , value.var = 'value')
gsub('\.', '', names(a))
gsub('\\.', '', names(a))
gsub('\\.', ' ', names(a))
names(a)
gsub('\\.{1,2}', ' ', names(a))
names(a) <- gsub('\\.{1,2}', ' ', names(a))
names(a)
gsub('[0-9]', ' ', names(a))
gsub('[0-9]', '', names(a))
gsub('\s+$', '', names(a))
gsub('\\s+$', '', names(a))
names(a)
names(a) <- gsub('[0-9]', '', names(a))#remove year
names(a)
names(a) <- gsub('\\s+$', '', names(a))
names(a)
a[1:10, 45:47]
a[1:15, 45:47]
a[1:25, 45:47]
head(menus)
a<-melt(menus, id.vars = c('Restaurant.', 'Food.Category.', 'Item_Name.',
'Menu_Item_ID'))
a$year<-str_match(a$variable, "[0-9]{4}")
head(a)
a$variable <- gsub('\\.{1,2}', ' ', a$variable)#remove dots
head(a)
a$variable <- gsub('[0-9]', '', a$variable)#remove year
head(a)
a$variable <- gsub('\\s+$', '', a$variable)#remove trailing space
a<-dcast(a, Restaurant. + Food.Category. + Item_Name. + Menu_Item_ID + year ~
variable , value.var = 'value')
head(a)
a<-arrange(a, Restaurant., Item_Name.)
head(a)
levels(a$Restaurant.)
library(ggplot2)
plot<-ggplot(df, aes(x=Calories))
source('~/.active-rstudio-document', echo=TRUE)
20*4*20
20*4*20*4
plot<-ggplot(df, aes(x=Calories))
plot + geom_density()
head(df)
plot<-ggplot(df, aes(x=Calories))
plot + geom_density()
str(df$Calories)
df$Calories <- as.numeric(df$Calories)
plot<-ggplot(df, aes(x=Calories))
plot + geom_density()
plot + geom_histogram(binwidth=1, fill="#144256") +
theme_bw()
summary(df$Calories)
length(df$Calories<1)
str(df$Calories)
length(df$Calories[df$Calories < 1])
df$Calories == 0
length(df$Calories[df$Calories == 0])
lenght(df$Calories)
length(df$Calories)
plot + geom_boxplot(fill='#144256')
theme_bw()
\l;
>
+
.
head(df)
levels(df$Food.Category.)
names(df)
plot<-ggplot(df, aes(x=Food.Category., y=Calories))
plot + geom_boxplot(fill='#144256')+
theme_bw()
library(dplyr)
install.packages('dplyr')
library(dplyr)
group_by(df, Food.Category) %>%
median()
group_by(df, Food.Category.) %>%
summarise(med = median(Calories))
group_by(df, Food.Category.) %>%
summarise(med = median(Calories, na.rm=T))
group_by(df, Food.Category.) %>%
summarise(med = median(Calories, na.rm=T)) &>&
group_by(df, Food.Category.) %>%
summarise(med = median(Calories, na.rm=T)) %>%
arrange(med)
group_by(df, Food.Category.) %>%
summarise(med = median(Calories, na.rm=T)) %>%
arrange(desc(med))
group_by(df, Food.Category.) %>%
summarise(med = median(Calories, na.rm=T)) %>%
medians <- arrange(desc(med))
group_by(df, Food.Category.) %>%
summarise(med = median(Calories, na.rm=T)) %>%
medians <- arrange(desc(med))
group_by(df, Food.Category.) %>%
summarise(med = median(Calories, na.rm=T)) %>%
arrange(desc(med)) %>%
ordered<-as.data.frame()
group_by(df, Food.Category.) %>%
summarise(med = median(Calories, na.rm=T)) %>%
arrange(desc(med)) %>%
as.data.frame()
group_by(df, Food.Category.) %>%
summarise(med = median(Calories, na.rm=T)) %>%
arrange(desc(med)) %>%
plot.df<-
s
group_by(df, Food.Category.) %>%
summarise(med = median(Calories, na.rm=T)) %>%
arrange(desc(med)) %.%
as.data.frame()
group_by(df, Food.Category.) %>%
summarise(med = median(Calories, na.rm=T)) %>%
arrange(desc(med)) %>%
as_data_frame()
ordered.df<-group_by(df, Food.Category.) %>%
summarise(med = median(Calories, na.rm=T)) %>%
arrange(desc(med)) %>%
as_data_frame()
levels(ordered.df$Food.Category.)
ordered.df$Food.Category.
df$Food.Category.factor(df$Food.Category., levels=ordered.df$Food.Category.)
df$Food.Category. <- factor(df$Food.Category., levels=ordered.df$Food.Category.)
plot <- ggplot(df, aes(x=Food.Category., y=Calories))
plot + geom_boxplot(fill='#144256') +
xlab('Food Category') +
theme_bw()
plot <- ggplot(df, aes(x=Food.Category., y=Calories))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') +
theme_bw()
ordered.df <- group_by(df, Food.Category.) %>%
summarise(med = median(Carbohydrates\ g, na.rm=T)) %>%
arrange(desc(med)) %>%
summarise(med = median(Carbohydrates\\ g, na.rm=T)) %>%
ordered.df <- group_by(df, Food.Category.) %>%
summarise(med = median(Carbohydrates\\ g, na.rm=T)) %>%
menus<-read.csv('../Data/menustat-546cf6b433804.csv')
#this doesn't work.  Throws an error:
#Error in read.table(file = file, header = header, sep = sep, quote = quote,  :
#  more columns than column names
menus<-readLines('../Data/menustat-546cf6b433804.csv')
menus<-menus[-1]
menus<-gsub('\t-', '', menus)
menus<-gsub('\t', '', menus)
menus<-read.csv(textConnection(menus)) #this takes a minute...
submenus<-menus[,3:51] #leave 'Restuarant', 'Food Category', and 'Menu Item ID' untouched.
submenus[]<-lapply(submenus, as.character)
menus[,3:51]<-submenus
submenus<-menus[,c(7:15, 19:51)]
submenus[]<-lapply(submenus, as.numeric)
menus[,c(7:15, 19:51)]<-submenus
library(reshape2)
library(stringr)
library(plyr)
df<-melt(menus, id.vars = c('Restaurant.', 'Food.Category.', 'Item_Name.',
'Menu_Item_ID'))
df$year<-str_match(df$variable, "[0-9]{4}")
df$variable <- gsub('\\.{1,2}', '', df$variable)#remove dots
df$variable <- gsub('[0-9]', '', df$variable)#remove year
df$variable <- gsub('\\s+$', '', df$variable)#remove trailing space
df<-dcast(df, Restaurant. + Food.Category. + Item_Name. + Menu_Item_ID + year ~
variable , value.var = 'value')
df<-arrange(df, Restaurant., Item_Name.)
ordered.df <- group_by(df, Food.Category.) %>%
summarise(med = median(Calories, na.rm=T)) %>%
arrange(desc(med)) %>%
as_data_frame()
head(df)
str(df$Calories)
df$Calories <- as.numeric(df$Calories)
ordered.df <- group_by(df, Food.Category.) %>%
summarise(med = median(Calories, na.rm=T)) %>%
arrange(desc(med)) %>%
as_data_frame()
df$Food.Category. <- factor(df$Food.Category., levels=ordered.df$Food.Category.)
plot <- ggplot(df, aes(x=Food.Category., y=Calories))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') +
theme_bw()
df$Carbohydrates <- as.numeric(df$Carbohydratesg))
ordered.df <- group_by(df, Food.Category.) %>%
ordered.df <- group_by(df, Food.Category.) %>%
as_data_frame()
df$Carbohydrates <- as.numeric(df$Carbohydratesg))
df$Carbohydrates <- as.numeric(df$Carbohydratesg)
ordered.df <- group_by(df, Food.Category.) %>%
summarise(med = median(Carbohydratesg, na.rm=T)) %>%
arrange(desc(med)) %>%
as_data_frame()
df$Carbohydratesg <- as.numeric(df$Carbohydratesg)
ordered.df <- group_by(df, Food.Category.) %>%
summarise(med = median(Carbohydratesg, na.rm=T)) %>%
arrange(desc(med)) %>%
as_data_frame()
df$Food.Category. <- factor(df$Food.Category., levels=ordered.df$Food.Category.)
plot <- ggplot(df, aes(x=Food.Category., y=Calories))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') +
theme_bw()
head(ordered.df)
plot <- ggplot(df, aes(x=Food.Category., y=Carbohydratesg))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') + ylab('Carbohydrates') +
theme_bw()
df$Proteing <- as.numeric(df$Proteing)
ordered.df <- group_by(df, Food.Category.) %>%
summarise(med = median(Proteing, na.rm=T)) %>%
arrange(desc(med)) %>%
as_data_frame()
df$Food.Category. <- factor(df$Food.Category., levels=ordered.df$Food.Category.)
plot <- ggplot(df, aes(x=Food.Category., y=Proteing))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') + ylab('Proteing') +
theme_bw()
max(df$Proteing)
max(df$Proteing, na.rm=T)
df[df$Proteing == 330,]
df$Proteing[df$Proteing == 330]
df$Proteing[df$Proteing > 330]
na.omit(df$Proteing[df$Proteing > 330])
na.omit(df$Proteing[df$Proteing > 300])
na.omit(df[df$Proteing > 300, ])
str(df$Proteing)
subset(df, df$Proteing > 300)
subset(df, df$Proteing > 240)
df$Calories <- as.numeric(df$Calories)
ordered.df <- group_by(df, Food.Category.) %>%
summarise(med = median(Calories, na.rm=T)) %>%
arrange(desc(med)) %>%
as_data_frame()
df$Food.Category. <- factor(df$Food.Category., levels=ordered.df$Food.Category.)
plot <- ggplot(df, aes(x=Food.Category., y=Calories))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') +
theme_bw() +
theme(axis.text.x - element_text(angle=45))
plot <- ggplot(df, aes(x=Food.Category., y=Calories))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') +
theme_bw() +
theme(axis.text.x = element_text(angle=45))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') +
theme_bw() +
theme(axis.text.x = element_text(angle=30))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') +
theme_bw() +
theme(axis.text.x = element_text(angle=15))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') +
theme_bw() +
theme(axis.text.x = element_text(angle=15, vjust=.1))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') +
theme_bw() +
theme(axis.text.x = element_text(angle=15, vjust=.9))
df$Carbohydratesg <- as.numeric(df$Carbohydratesg)
ordered.df <- group_by(df, Food.Category.) %>%
summarise(med = median(Carbohydratesg, na.rm=T)) %>%
arrange(desc(med)) %>%
as_data_frame()
df$Food.Category. <- factor(df$Food.Category., levels=ordered.df$Food.Category.)
plot <- ggplot(df, aes(x=Food.Category., y=Carbohydratesg))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') + ylab('Carbohydrates') +
theme_bw()
subset(df, df$Carbohydratesg > 800)
df[131160:131162,]
df[131160:131163,]
df[131161:131163,]
555/63
df$Carbohydratesg[131161]
df$Carbohydratesg[131161] <- NA
plot <- ggplot(df, aes(x=Food.Category., y=Carbohydratesg))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') + ylab('Carbohydrates') +
theme_bw()
df$Proteing <- as.numeric(df$Proteing)
ordered.df <- group_by(df, Food.Category.) %>%
summarise(med = median(Proteing, na.rm=T)) %>%
arrange(desc(med)) %>%
as_data_frame()
df$Food.Category. <- factor(df$Food.Category., levels=ordered.df$Food.Category.)
plot <- ggplot(df, aes(x=Food.Category., y=Proteing))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') + ylab('Protein') +
theme_bw()
plot <- ggplot(df, aes(x=Food.Category., y=Proteing))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') + ylab('Protein') +
theme_bw() +
theme(axis.text.x = element_text(angle=15, vjust=.9))
subset(df, df$Proteing > 240)
