axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plotc <- ggplot(df.agg[df.agg$group == 'yes',], aes(x=factor(value), y=group.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
xlab('Value') + scale_y_continuous(breaks=seq(0,12, 2)) +
labs(title = "Group Affirmation")+
theme(legend.text=element_text(size=10),
legend.title = element_text(size=10),
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plota
plotb
plotc
df.agg$value
df.agg$value
df.agg
df.agg
df.agg$value
levels(df.agg$value)
df.agg$value <- factor(df.agg$value, levels=c('athletic ability', 'athletic team', 'church group', 'religious values',
'fraternal group', 'friends and family', 'music and art',
'musical or choir group', 'creativity', 'online community/club',
'sense of humor', 'race/ethnic group')
)
df.agg$value
plota <- ggplot(df.agg[df.agg$group == 'no',], aes(x=factor(value), y=control.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
labs(title="Control") + ylab('Count') +
scale_y_continuous(breaks=seq(0,12, 2)) +
theme(legend.position='none',
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plotb <- ggplot(df.agg[df.agg$group == 'no',], aes(x=factor(value), y=self.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
scale_y_continuous(breaks=seq(0,12, 2)) +
#scale_x_discrete('value', labels=(c('music and art', 'athletic ability', 'creativity', 'friends and family', 'religious values', 'sense of humor'))) +
labs(title = "Self Affirmation") +
theme(legend.position='none',
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plotc <- ggplot(df.agg[df.agg$group == 'yes',], aes(x=factor(value), y=group.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
xlab('Value') + scale_y_continuous(breaks=seq(0,12, 2)) +
labs(title = "Group Affirmation")+
theme(legend.text=element_text(size=10),
legend.title = element_text(size=10),
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plota
plotb
plotc
layOut(list(plota, 1, 1:3),
list(plotb, 1, 4:5),
list(plotc, 2, 1:5))
plotb <- ggplot(df.agg[df.agg$group == 'no',], aes(x=factor(value), y=self.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
scale_y_continuous(breaks=seq(0,12, 2)) +
labs(title = "Self Affirmation") + ylab('Count') +
theme(legend.position='none',
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
layOut(list(plota, 1, 1:3),
list(plotb, 1, 4:5),
list(plotc, 2, 1:5))
?layOut
11+12
11/23
?chi.sq
?chisq.test
head(df)
names(df)
str(df$value)
df$value <- factor(df$value)
str(df$value)
levels(df$value)
chisq.test(df$value, df$stereotyped)
table(df$value, df$stereotyped)
table(df$value[df$interventcond == 'group', ], df$stereotyped[df$interventcond == 'group', ])
df$interventcond[1:5]
table(df$interventcond=='group')
table(df$value[df$interventcond=='group',])
table(df[df$interventcond=='group',df$value])
with(df[df$interventcond=='group'], table(df$value))
table(df$value[which(df$interventcond=='group'),])
table(df$interventcond)
table(df$value)
df[df$interventcond=='group', df$value]
df[which(df$interventcond=='group'), 263]
df[which(df$interventcond=='group'), 'value']
table(df[which(df$interventcond=='group'), 'value'], df[which(df$interventcond=='group'), 'stereotyped'])
chisq.test(table(df[which(df$interventcond=='group'), 'value'], df[which(df$interventcond=='group'), 'stereotyped']))
chisq.test(df$value, df$stereotyped)
table(df[which(df$interventcond=='group'), 'value'], df[which(df$interventcond=='group'), 'stereotyped'])
names(df)
head(df$test1numCorrectofAnswer)
?melt
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
library(reshape2)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
head(df.melt)
df.melt$variable <- gsub(df.melt$variable, 'numCorrectofAnswer', '')
df.melt$variable <- gsub(df.melt$variable, 'numCorrectofAnswer', '')
df.melt
df.melt$variable <- gsub('numCorrectofAnswer', '', df.melt$variable)
head(df.melt)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
?grep
levels(df.melt$variable)
df.melt$variable <- factor(df.melt$variable, levels=c('test1', 'test2', 'test3'))
levels(df.melt$variable)
hist(df.melt$value)
plot<-ggplot(df.melt, aes(x=variable, y=value, aes=interventcond))
plot+geom_line()+
facet_wrap(~stereotyped)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
df.melt$variable <- factor(df.melt$variable, levels=c('test1', 'test2', 'test3'))
plot<-ggplot(df.melt, aes(x=variable, y=value, aes=interventcond))
plot+geom_line()+
facet_wrap(~stereotyped)
df.melt$variable
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
head(df.melt)
df.melt$variable <- factor(df.melt$variable, levels=c('test1', 'test2', 'test3'))
head(df.melt)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
str(df.melt$variable)
df.melt$variable <- factor(df.melt$variable, levels=c('test1', 'test2', 'test3'))
str(df.melt$variable)
df.melt$variable <- factor(df.melt$variable)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
df.melt$variable <- factor(df.melt$variable)
str(df.melt$variable)
levels(df.melt$variable) <- c('test1', 'test2', 'test3')
str(df.melt$variable)
plot<-ggplot(df.melt, aes(x=variable, y=value, aes=interventcond))
plot+geom_line()+
facet_wrap(~stereotyped)
plot<-ggplot(df.melt, aes(x=variable, y=value, group=interventcond))
plot+geom_line()+
facet_wrap(~stereotyped)
plot<-ggplot(df.melt, aes(x=variable, y=value, group=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplot(df.melt, aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplot(!is.na(df.melt), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
plot<-ggplot(df.melt[which(df$interventcond != NA),], aes(x=variable, y=value, group=interventcond, color=interventcond))
plot<-ggplot(df.melt[which(df.melt$stereotyped != NA),], aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplot(subset(df.melt$stereotyped != NA), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot<-ggplot(subset(df.melt, df.melt$stereotyped != NA), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplot(subset(df.melt, df.melt$stereotyped == NA), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplotna.omit(df.melt), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
?update
?lmer
library(lme4)
?lmer
head(df.melt$variable-1)
head(df.melt)
fm1 <- lmer(value ~ variable + (variable | subjectnum))
fm1 <- lmer(value ~ variable + (variable | subjectnum), df.melt)
table(subjectnum)
table(df.meltsubjectnum)
table(df.melt$subjectnum)
table#df.melt$variable
table(df.melt$variable)
table(df.melt$stereotyped)
fm1 <- lmer(value ~ variable + (variable | factor(subjectnum)), df.melt)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ variable + (variable | subjectnum), df.melt)
str(df.melt$subjectnum)
fm1 <- lmer(value ~ variable + (1 | subjectnum), df.melt)
head(df.melt)
fm2 <- update(fm1 .~. + interventcond)
fm2 <- update(fm1, .~. + interventcond)
fm3 <- update(fm2, .~. + stereotyped)
anova(fm1, fm2)
anova(fm1, fm3)
anova(fm2, fm3)
anova(fm1, fm3)
fm4 <- update(fm3, .~variable*interventcond*stereotyped)
fm4 <- update(fm3, .~variable*interventcond*stereotyped + (1 | subjectnum))
anova(fm3, fm4)
fm5 <- lm(value ~ variable + interventcond + stereotyped, data=df.melt)
fm5
summary(fm5)
fm5
names(fm5)
fm5$contrasts
fm5$effects
summary(fm5)
df.melt$testnum <- as.numeric(df.melt$variable)
table(df.melt$testnum, df.melt$variable)
df.melt$subjectnum <- factor(df.melt$subjectnum)-1
df.melt$testnum <- as.numeric(df.melt$variable)-1
table(df.melt$testnum, df.melt$variable)
df.melt$testnum <- as.numeric(df.melt$variable)
fm5 <- lm(value ~ testnum + interventcond + stereotyped, data=df.melt)
fm5
summary(fm5)
fm1 <- lmer(value ~ testnum +  (testnum | subjectnum), df.melt)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ testnum +  (testnum | subjectnum), df.melt)
fm1 <- lmer(value ~ testnum +  (testnum | subjectnum), df.melt)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ testnum +  (testnum | subjectnum), df.melt)
fm1 <- lmer(value ~ testnum + (testnum | subjectnum), df.melt)
fm1 <- lmer(value ~ testnum + (testnum|subjectnum), df.melt)
fm5 <- lm(value ~ testnum + interventcond + stereotyped, data=df.melt)
fm5
summary(fm5)
fm1 <- lmer(value ~ testnum-1 + (testnum-1|subjectnum), df.melt)
fm1 <- lmer(value ~ testnum + (1|subjectnum), df.melt)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ testnum + (1|subjectnum), df.melt)
str(subjectnum)
str(df.melt$subjectnum)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
levels(df.melt$variable) <- c('test1', 'test2', 'test3')
df.melt$testnum <- as.numeric(df.melt$variable)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ testnum + (testnum|subjectnum), df.melt)
fm1
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum, color=subjectnum))
plot+geom_line()+
facet_wrap(~stereotyped)
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum, color=interventcond))
plot+geom_line()+
facet_wrap(~stereotyped)
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line()+
facet_wrap(interventcond~stereotyped)
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line()+
facet_grid(interventcond~stereotyped)
fullmodel <- lmer(value ~ testnum*steretyped*interventcond + (testnum|subjectnum), df.melt)
fullmodel <- lmer(value ~ testnum*stereotyped*interventcond + (testnum|subjectnum), df.melt)
fm2 <- update(fmullmodel, .~ testnum*stereotyped + testnum*interventcond + (testnum|subjectnum), df.melt)
fm2 <- update(fullmodel, .~ testnum*stereotyped + testnum*interventcond + (testnum|subjectnum), df.melt)
anova(fullmodel, fm2)
fm4 <- update(fullmodel, .~ testnum + stereotyped + interventcond (testnum | subjectnum), df.melt)
fm4 <- update(fullmodel, .~ testnum + stereotyped + interventcond + (testnum | subjectnum), df.melt)
anova(fullmodel, fm4)
plot(fullmodel)
plot(fm2)
plot(fm3)
plot(fm4)
plot(fm5)
fm4 <- update(fullmodel, .~ testnum + stereotyped + interventcond + (testnum | subjectnum), df.melt)
plot(fm4)
plot(fullmodel)
fullmodel
summary(fullmodel)
MCMCglmm(fullmodel)
mcmcsamp(fullmodel)
library(mcmcglmm)
library('mcmcglmm')
library('MCMCglmm')
install.packages('MCMCglmm')
?MCMCglmm
library(MCMCglmm)
MCMCglmm(fullmodel)
lme4
?lme4
version(lme4)
version()
r.version()
bootmer(fullmodel)
bootMer(fullmodel)
fun <- function(fit){return(fixef(fit))}
bootMer(fullmodel, fun)
help("simulate-mer")
?simulate-mer
?simulatemer
a<-bootMer(fullmodel, fun, sim=1000)
a<-bootMer(fullmodel, fun, nsim = 1000)
summary(a)
names(a)
a[1]
a[2]
summary(a[2])
hist(a[2])
hist(a[2]$t)
hist(a[3])
summary(a[3])
62+55
library(foreign)
df<-read.spss('Desktop/Datasets from Jonathan/BEL AFF NON-WHITE and PREVIOUS.sav')
df<-read.spss('Desktop/Datasets from Jonathan/BEL AFF NON-WHITE and PREVIOUS.sav',to.data.frame = T)
head(df)
df.2<-read.spss('Desktop/Datasets from Jonathan/117BELAFF-CORRECTED.sav')
df.2<-read.spss('Desktop/Datasets from Jonathan/117BELAFF-CORRECTED.sav', to.data.frame = T)
head(df)
head(df.2)
setwd("~/Documents/Gits/riddlet.github.io/_drafts/_knitr")
menus<-readLines('../Data/menustat-546cf6b433804.csv')
menus<-menus[-1]
menus<-gsub('\t-', '', menus)
menus<-gsub('\t', '', menus)
system.time(menus<-read.csv(textConnection(menus)))
df[sampe(nrow(df), 5), ]
df[sample(nrow(df), 5), ]
submenus<-menus[,3:51] #leave 'Restuarant', 'Food Category', and 'Menu Item ID' untouched.
submenus[]<-lapply(submenus, as.character)
menus[,3:51]<-submenus
submenus<-menus[,c(7:15, 19:51)]
submenus[]<-lapply(submenus, as.numeric)
menus[,c(7:15, 19:51)]<-submenus
library(reshape2)
library(stringr)
library(plyr)
df <- melt(menus, id.vars = c('Restaurant.', 'Food.Category.', 'Item_Name.',
'Menu_Item_ID'))
df[sample(nrow(df), 5), ]
levels(df$variable)
levels
levels()
?levels
factor()
ggplot
ggplot()
melt
df$year <- df$variable
levels(df$year) <- str_match(levels(df$variable), "[0-9]{4}")
levels(df$variable) <- gsub('\\.{1,2}', '', levels(df$variable))#remove dots
levels(df$variable) <- gsub('[0-9]', '', levels(df$variable))#remove year
levels(df$variable) <- gsub('\\s+$', '', levels(df$variable))#remove trailing space
df[sample(nrow(df), 5)]
df[sample(nrow(df), 5),]
str(df$year)
str(df$variable)
levels(df$variable)
input <- commandArgs(trailingOnly = TRUE)
KnitPost <- function(input, base.url = "/") {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("../figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
print(paste0("../_posts/", sub(".Rmd$", "", basename(input)), ".md"))
knit(input, output = paste0("../_posts/", sub(".Rmd$", "", basename(input)), ".md"), envir = parent.frame())
}
KnitPost(input)
KnitPost(input = 'Speeding things up.Rmd')
menus<-readLines('../Data/menustat-546cf6b433804.csv')
menus<-menus[-1]
menus<-gsub('\t-', '', menus)
menus<-gsub('\t', '', menus)
menus<-read.csv(textConnection(menus)) #this takes a minute...
submenus<-menus[,3:51] #leave 'Restuarant', 'Food Category', and 'Menu Item ID' untouched.
submenus[]<-lapply(submenus, as.character)
menus[,3:51]<-submenus
submenus<-menus[,c(7:15, 19:51)]
submenus[]<-lapply(submenus, as.numeric)
menus[,c(7:15, 19:51)]<-submenus
library(reshape2)
library(stringr)
library(plyr)
df <- melt(menus, id.vars = c('Restaurant.', 'Food.Category.', 'Item_Name.',
'Menu_Item_ID'))
df$year <- df$variable
levels(df$year) <- str_match(levels(df$variable), "[0-9]{4}")
levels(df$variable) <- gsub('\\.{1,2}', '', levels(df$variable))#remove dots
levels(df$variable) <- gsub('[0-9]', '', levels(df$variable))#remove year
levels(df$variable) <- gsub('\\s+$', '', levels(df$variable))#remove trailing space
df<-dcast(df, Restaurant. + Food.Category. + Item_Name. + Menu_Item_ID + year ~
variable , value.var = 'value')
df<-arrange(df, Restaurant., Item_Name.)
head(df)
dim
dim(df)
library(ggplot2)
library(dplyr)
df$Calories <- as.numeric(df$Calories)
ordered.df <- group_by(df, Food.Category.) %>%
summarise(med = median(Calories, na.rm=T)) %>%
arrange(desc(med)) %>%
as_data_frame()
df$Food.Category. <- factor(df$Food.Category., levels=ordered.df$Food.Category.)
plot <- ggplot(df, aes(x=Food.Category., y=Calories))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') +
theme_bw() +
theme(axis.text.x = element_text(angle=15, vjust=.9))
df$Carbohydratesg <- as.numeric(df$Carbohydratesg)
ordered.df <- group_by(df, Food.Category.) %>%
summarise(med = median(Carbohydratesg, na.rm=T)) %>%
arrange(desc(med)) %>%
as_data_frame()
df$Food.Category. <- factor(df$Food.Category., levels=ordered.df$Food.Category.)
plot <- ggplot(df, aes(x=Food.Category., y=Carbohydratesg))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') + ylab('Carbohydrates') +
theme_bw() +
theme(axis.text.x = element_text(angle=15, vjust=.9))
subset(df, df$Carbohydratesg > 800)
df[131161:131163,]
df$Carbohydratesg[131161] <- NA
plot <- ggplot(df, aes(x=Food.Category., y=Carbohydratesg))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') + ylab('Carbohydrates') +
theme_bw() +
theme(axis.text.x = element_text(angle=15, vjust=.9))
df$Proteing <- as.numeric(df$Proteing)
ordered.df <- group_by(df, Food.Category.) %>%
summarise(med = median(Proteing, na.rm=T)) %>%
arrange(desc(med)) %>%
as_data_frame()
df$Food.Category. <- factor(df$Food.Category., levels=ordered.df$Food.Category.)
plot <- ggplot(df, aes(x=Food.Category., y=Proteing))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') + ylab('Protein') +
theme_bw() +
theme(axis.text.x = element_text(angle=15, vjust=.9))
subset(df, df$Proteing > 240)
df[75610:75625,]
df[75619:75621,]
df[75620, 16]
df[75620, 21]
df[75815,]
df[75814:75816,]
df[75810:75820,]
df[75815, 21]
df[75815, 16] <- 250
df[75815, 21] <- 3
plot <- ggplot(df, aes(x=Food.Category., y=Proteing))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') + ylab('Protein') +
theme_bw() +
theme(axis.text.x = element_text(angle=15, vjust=.9))
df[75620, 16]
subset(df, df$Proteing > 240)
df[75620, 21] <- 3
subset(df, df$Proteing > 240)
plot <- ggplot(df, aes(x=Food.Category., y=Proteing))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') + ylab('Protein') +
theme_bw() +
theme(axis.text.x = element_text(angle=15, vjust=.9))
df$TotalFatg <- as.numeric(df$TtotalFatg)
ordered.df <- group_by(df, Food.Category.) %>%
summarise(med = median(TotalFatg, na.rm=T)) %>%
arrange(desc(med)) %>%
as_data_frame()
df$TotalFatg <- as.numeric(df$TtotalFatg)
df$TotalFatg <- as.numeric(df$TotalFatg)
ordered.df <- group_by(df, Food.Category.) %>%
summarise(med = median(TotalFatg, na.rm=T)) %>%
arrange(desc(med)) %>%
as_data_frame()
df$Food.Category. <- factor(df$Food.Category., levels=ordered.df$Food.Category.)
plot <- ggplot(df, aes(x=Food.Category., y=TotalFatg))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') + ylab('Total Fat') +
theme_bw() +
theme(axis.text.x = element_text(angle=15, vjust=.9))
subset(df, df$TotalFatg > 300)
df[122300:122310]
df[122300:122310,]
df[122305]
df[122305,]
df[122305,12]
df[122305,11]
df[122305,12] <- NA
df[122305,11] <- NA
plot <- ggplot(df, aes(x=Food.Category., y=TotalFatg))
plot + geom_boxplot(fill='#ABC3CE') +
xlab('Food Category') + ylab('Total Fat') +
theme_bw() +
theme(axis.text.x = element_text(angle=15, vjust=.9))
KnitPost('Menustat.Rmd')
