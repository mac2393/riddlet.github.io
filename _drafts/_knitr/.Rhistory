table(df[which(df$interventcond=='group'), 'value'], df[which(df$interventcond=='group'), 'stereotyped'])
names(df)
head(df$test1numCorrectofAnswer)
?melt
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
library(reshape2)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
head(df.melt)
df.melt$variable <- gsub(df.melt$variable, 'numCorrectofAnswer', '')
df.melt$variable <- gsub(df.melt$variable, 'numCorrectofAnswer', '')
df.melt
df.melt$variable <- gsub('numCorrectofAnswer', '', df.melt$variable)
head(df.melt)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
?grep
levels(df.melt$variable)
df.melt$variable <- factor(df.melt$variable, levels=c('test1', 'test2', 'test3'))
levels(df.melt$variable)
hist(df.melt$value)
plot<-ggplot(df.melt, aes(x=variable, y=value, aes=interventcond))
plot+geom_line()+
facet_wrap(~stereotyped)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
df.melt$variable <- factor(df.melt$variable, levels=c('test1', 'test2', 'test3'))
plot<-ggplot(df.melt, aes(x=variable, y=value, aes=interventcond))
plot+geom_line()+
facet_wrap(~stereotyped)
df.melt$variable
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
head(df.melt)
df.melt$variable <- factor(df.melt$variable, levels=c('test1', 'test2', 'test3'))
head(df.melt)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
str(df.melt$variable)
df.melt$variable <- factor(df.melt$variable, levels=c('test1', 'test2', 'test3'))
str(df.melt$variable)
df.melt$variable <- factor(df.melt$variable)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
df.melt$variable <- factor(df.melt$variable)
str(df.melt$variable)
levels(df.melt$variable) <- c('test1', 'test2', 'test3')
str(df.melt$variable)
plot<-ggplot(df.melt, aes(x=variable, y=value, aes=interventcond))
plot+geom_line()+
facet_wrap(~stereotyped)
plot<-ggplot(df.melt, aes(x=variable, y=value, group=interventcond))
plot+geom_line()+
facet_wrap(~stereotyped)
plot<-ggplot(df.melt, aes(x=variable, y=value, group=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplot(df.melt, aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplot(!is.na(df.melt), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
plot<-ggplot(df.melt[which(df$interventcond != NA),], aes(x=variable, y=value, group=interventcond, color=interventcond))
plot<-ggplot(df.melt[which(df.melt$stereotyped != NA),], aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplot(subset(df.melt$stereotyped != NA), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot<-ggplot(subset(df.melt, df.melt$stereotyped != NA), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplot(subset(df.melt, df.melt$stereotyped == NA), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
plot<-ggplotna.omit(df.melt), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=interventcond, color=interventcond))
plot+stat_smooth(method='glm')+
facet_wrap(~stereotyped)
?update
?lmer
library(lme4)
?lmer
head(df.melt$variable-1)
head(df.melt)
fm1 <- lmer(value ~ variable + (variable | subjectnum))
fm1 <- lmer(value ~ variable + (variable | subjectnum), df.melt)
table(subjectnum)
table(df.meltsubjectnum)
table(df.melt$subjectnum)
table#df.melt$variable
table(df.melt$variable)
table(df.melt$stereotyped)
fm1 <- lmer(value ~ variable + (variable | factor(subjectnum)), df.melt)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ variable + (variable | subjectnum), df.melt)
str(df.melt$subjectnum)
fm1 <- lmer(value ~ variable + (1 | subjectnum), df.melt)
head(df.melt)
fm2 <- update(fm1 .~. + interventcond)
fm2 <- update(fm1, .~. + interventcond)
fm3 <- update(fm2, .~. + stereotyped)
anova(fm1, fm2)
anova(fm1, fm3)
anova(fm2, fm3)
anova(fm1, fm3)
fm4 <- update(fm3, .~variable*interventcond*stereotyped)
fm4 <- update(fm3, .~variable*interventcond*stereotyped + (1 | subjectnum))
anova(fm3, fm4)
fm5 <- lm(value ~ variable + interventcond + stereotyped, data=df.melt)
fm5
summary(fm5)
fm5
names(fm5)
fm5$contrasts
fm5$effects
summary(fm5)
df.melt$testnum <- as.numeric(df.melt$variable)
table(df.melt$testnum, df.melt$variable)
df.melt$subjectnum <- factor(df.melt$subjectnum)-1
df.melt$testnum <- as.numeric(df.melt$variable)-1
table(df.melt$testnum, df.melt$variable)
df.melt$testnum <- as.numeric(df.melt$variable)
fm5 <- lm(value ~ testnum + interventcond + stereotyped, data=df.melt)
fm5
summary(fm5)
fm1 <- lmer(value ~ testnum +  (testnum | subjectnum), df.melt)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ testnum +  (testnum | subjectnum), df.melt)
fm1 <- lmer(value ~ testnum +  (testnum | subjectnum), df.melt)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ testnum +  (testnum | subjectnum), df.melt)
fm1 <- lmer(value ~ testnum + (testnum | subjectnum), df.melt)
fm1 <- lmer(value ~ testnum + (testnum|subjectnum), df.melt)
fm5 <- lm(value ~ testnum + interventcond + stereotyped, data=df.melt)
fm5
summary(fm5)
fm1 <- lmer(value ~ testnum-1 + (testnum-1|subjectnum), df.melt)
fm1 <- lmer(value ~ testnum + (1|subjectnum), df.melt)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ testnum + (1|subjectnum), df.melt)
str(subjectnum)
str(df.melt$subjectnum)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
levels(df.melt$variable) <- c('test1', 'test2', 'test3')
df.melt$testnum <- as.numeric(df.melt$variable)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fm1 <- lmer(value ~ testnum + (testnum|subjectnum), df.melt)
fm1
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum, color=subjectnum))
plot+geom_line()+
facet_wrap(~stereotyped)
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum, color=interventcond))
plot+geom_line()+
facet_wrap(~stereotyped)
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line()+
facet_wrap(interventcond~stereotyped)
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line()+
facet_grid(interventcond~stereotyped)
fullmodel <- lmer(value ~ testnum*steretyped*interventcond + (testnum|subjectnum), df.melt)
fullmodel <- lmer(value ~ testnum*stereotyped*interventcond + (testnum|subjectnum), df.melt)
fm2 <- update(fmullmodel, .~ testnum*stereotyped + testnum*interventcond + (testnum|subjectnum), df.melt)
fm2 <- update(fullmodel, .~ testnum*stereotyped + testnum*interventcond + (testnum|subjectnum), df.melt)
anova(fullmodel, fm2)
fm4 <- update(fullmodel, .~ testnum + stereotyped + interventcond (testnum | subjectnum), df.melt)
fm4 <- update(fullmodel, .~ testnum + stereotyped + interventcond + (testnum | subjectnum), df.melt)
anova(fullmodel, fm4)
plot(fullmodel)
plot(fm2)
plot(fm3)
plot(fm4)
plot(fm5)
fm4 <- update(fullmodel, .~ testnum + stereotyped + interventcond + (testnum | subjectnum), df.melt)
plot(fm4)
plot(fullmodel)
fullmodel
summary(fullmodel)
MCMCglmm(fullmodel)
mcmcsamp(fullmodel)
library(mcmcglmm)
library('mcmcglmm')
library('MCMCglmm')
install.packages('MCMCglmm')
?MCMCglmm
library(MCMCglmm)
MCMCglmm(fullmodel)
lme4
?lme4
version(lme4)
version()
r.version()
bootmer(fullmodel)
bootMer(fullmodel)
fun <- function(fit){return(fixef(fit))}
bootMer(fullmodel, fun)
help("simulate-mer")
?simulate-mer
?simulatemer
a<-bootMer(fullmodel, fun, sim=1000)
a<-bootMer(fullmodel, fun, nsim = 1000)
summary(a)
names(a)
a[1]
a[2]
summary(a[2])
hist(a[2])
hist(a[2]$t)
hist(a[3])
summary(a[3])
convertRMarkdown <- function(dir=getwd(), images.dir=dir, images.url='/images/',
out_ext='.markdown', in_ext='.rmd', recursive=FALSE) {
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
files <- list.files(path=dir, pattern=in_ext, ignore.case=TRUE, recursive=recursive)
for(f in files) {
message(paste("Processing ", f, sep=''))
content <- readLines(f)
frontMatter <- which(substr(content, 1, 3) == '---')
if(length(frontMatter) >= 2 & 1 %in% frontMatter) {
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
if(statusLine > frontMatter[1] & statusLine < frontMatter[2]) {
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
if(tolower(status) == 'process') {
#This is a bit of a hack but if a line has zero length (i.e. a
#black line), it will be removed in the resulting markdown file.
#This will ensure that all line returns are retained.
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
outFile <- paste(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext, sep='')
render_markdown(strict=TRUE)
opts_knit$set(out.format='markdown')
opts_knit$set(base.dir=images.dir)
opts_knit$set(base.url=images.url)
try(knit(text=content, output=outFile), silent=FALSE)
} else {
warning(paste("Not processing ", f, ", status is '", status,
"'. Set status to 'process' to convert.", sep=''))
}
} else {
warning("Status not found in front matter.")
}
} else {
warning("No front matter found. Will not process this file.")
}
}
invisible()
}
getcwd()
?cwd
getwd()
setwd("/Volumes/triddle/riddlet.github.io")
convertRMarkdown()
convertRMarkdown(dir='/Volumes//triddle/riddlet.github.io/_drafts/_posts')
getwd()
input <- commandArgs(trailingOnly = TRUE)
KnitPost <- function(input, base.url = "/") {
require(knitr)
opts_knit$set(base.url = base.url)
fig.path <- paste0("../figs/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
print(paste0("../_posts/", sub(".Rmd$", "", basename(input)), ".md"))
knit(input, output = paste0("../_posts/", sub(".Rmd$", "", basename(input)), ".md"), envir = parent.frame())
}
KnitPost(input)
?commandArgs
render_post
KnitPost(pooling_sd.Rmd)
KnitPost('pooling_sd.Rmd')
setwd("/Volumes/triddle/riddlet.github.io/_drafts/_knitr")
KnitPost('pooling_sd.Rmd')
library('foreign')
df <- read.spss("/Users/triddle/Desktop/Group Affirmation/Data/Groupaffrirmation_7_20_09.sav", to.data.frame = T)
df$stereotyped <- factor(df$ethnicity, levels=c('Asian', 'Latino', 'Black', 'Native American', 'White', 'Other'), labels=c('Nonstereotyped', 'Stereotyped', 'Stereotyped', 'Nonstereotyped', 'Nonstereotyped', 'Nonstereotyped'))
df$stereotyped <- droplevels(df$stereotyped)
library(psych)
self <- data.frame(cbind(a=df$selfinterInfluence, b=df$selfinterLiveupto, c=df$selfinterImportant, d=df$selfinterCare))
group <- data.frame(cbind(a=df$groupinterInfluence, b=df$groupinterLiveupto, c=df$groupinterImportant, d=df$groupinterCare))
control <- data.frame(cbind(a=df$continterInfluence, b=df$continterLiveupto, c=df$continterImportant, d=df$continterCare))
#subtracting two because there are a couple of extra value lables in the spss file for self and control only ('didn't answer' and 'neither agree nor disagree')
selfalpha <- alpha(self-2)
groupalpha <- alpha(group)
controlalpha <- alpha(control-2)
selfmean <- mean(apply(self-2, 1, mean), na.rm = T)
groupmean <- mean(apply(group, 1, mean), na.rm = T)
controlmean <- mean(apply(control-2, 1, mean), na.rm = T)
selfsd <- sd(apply(self-2, 1, mean), na.rm = T)
groupsd <- sd(apply(group, 1, mean), na.rm = T)
controlsd <- sd(apply(control-2, 1, mean), na.rm = T)
correct <- apply(cbind(df$test1numCorrect, df$test2numCorrect, df$test3numCorrect), 1, sum)
answered <- apply(cbind(df$test1numAnswer, df$test2numAnswer, df$test3numAnswer), 1, sum)
performance <- correct/answered
performance[performance>1] <- 1
stress <- data.frame(cbind(a=df$stressTest1, b=df$stressTest2, c=df$stressTest3, d=df$stressTest4,
e=df$stressTest5, f=df$stressTest6, g=df$stressTest7))
stress[, c(1, 2, 4:7)] <- stress[, c(1, 2, 4:7)]-1
stress[, 3] <- stress[, 3] - 2
stressalpha <- alpha(stress)
selfmean <- mean(apply(self, 1, mean), na.rm = T)
raceID <- data.frame(cbind(a=droplevels(df$caRaceImp1), b=droplevels(df$caRaceImp2), c=droplevels(df$caRaceImp3),
d=droplevels(df$caRaceImp4), e=droplevels(df$caRaceImp5), f=droplevels(df$caRaceImp6),
g=droplevels(df$caRaceImp7), h=droplevels(df$caRaceImp8), i=droplevels(df$caRaceImp9),
j=droplevels(df$caRaceImp10), k=droplevels(df$caRaceImp11)))
#
# Participants 25 and 71 circled the middle two responses for caRaceImp9.  I'm going to assign both of them a 3.5
raceID$i[raceID$i == 4] <- 3.5
raceID$i[raceID$i > 4] <- raceID$i[raceID$i > 4] - 1
raceIDalpha <- alpha(raceID)
raceIDalpha.reduced <- alpha(raceID[, 3:11])
selfmean <- mean(apply(self, 1, mean), na.rm = T)
library(ggplot2)
library(wq)
library(plyr)
value <- paste(df$contafftype, df$selfafftype, df$groupafftype, sep="")
df$value <- gsub('NA', '', value)
df$value[df$value == ' music and art'] <- 'music and art'
df.agg <- ddply(df, .var = c('value', 'stereotyped'), .fun=summarise,
valuecat = length(value),
self = sum(interventcond %in% 'self'),
control = sum(interventcond %in% 'control'),
group = sum(interventcond %in% 'group')
)
df.agg$value<-factor(df.agg$value)
df.agg <- df.agg[!is.na(df.agg$stereotyped) & !is.na(df.agg$value),]
df.agg2 <- expand.grid(value=levels(df.agg$value), stereotyped=levels(df.agg$stereotyped), valuecat=0, self=0, control=0,
group=0)
df.agg <- merge(df.agg, df.agg2, by.x=c('value', 'stereotyped'), by.y=c('value', 'stereotyped'), all=T)
df.agg[is.na(df.agg)] <- 0
df.agg$group <- c(rep('no', 2), rep('yes', 4), rep('no', 2), rep('yes', 2), rep('no', 4), rep('yes', 6), rep('no', 4))
df.agg$value <- factor(df.agg$value, levels=c('athletic ability', 'athletic team', 'church group', 'religious values',
'fraternal group', 'friends and family', 'music and art',
'musical or choir group', 'creativity', 'online community/club',
'sense of humor', 'race/ethnic group'))
plota <- ggplot(df.agg[df.agg$group == 'no',], aes(x=factor(value), y=control.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
labs(title="Control") + ylab('Count') +
scale_y_continuous(breaks=seq(0,12, 2)) +
theme(legend.position='none',
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plotb <- ggplot(df.agg[df.agg$group == 'no',], aes(x=factor(value), y=self.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
scale_y_continuous(breaks=seq(0,12, 2)) +
labs(title = "Self Affirmation") + ylab('Count') +
theme(legend.position='none',
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
plotc <- ggplot(df.agg[df.agg$group == 'yes',], aes(x=factor(value), y=group.x, fill=stereotyped)) +
geom_bar(stat='identity', position=position_dodge()) +
coord_flip() +
scale_fill_manual(values=c('#144256', '#ABC3CE'), name="Identity") +
theme_bw() +
scale_y_continuous(breaks=seq(0,12, 2)) +
labs(title = "Group Affirmation") + ylab('Count') +
theme(legend.text=element_text(size=10),
legend.title = element_text(size=10),
plot.title=element_text(size=10, face='bold'),
axis.title.y=element_blank(),
axis.text.y=element_text(size=10),
axis.title.x=element_text(face='bold', size=12),
axis.text.x=element_text(size=10))
layOut(list(plota, 1, 1:3),
list(plotb, 1, 4:5),
list(plotc, 2, 1:5))
ibrary(reshape2)
library(lme4)
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
levels(df.melt$variable) <- c('test1', 'test2', 'test3')
df.melt$testnum <- as.numeric(df.melt$variable)
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line()+
facet_grid(interventcond~stereotyped)
df.melt$subjectnum <- factor(df.melt$subjectnum)
fullmodel <- lmer(value ~ testnum*stereotyped*interventcond + (testnum|subjectnum), df.melt)
fm2 <- update(fullmodel, .~ testnum*stereotyped + testnum*interventcond + (testnum|subjectnum), df.melt)
fm3 <- update(fm2, .~. + stereotyped)
fm4 <- update(fullmodel, .~ testnum + stereotyped + interventcond + (testnum | subjectnum), df.melt)
fm5 <- lm(value ~ testnum + interventcond + stereotyped, data=df.melt)
bootMer(fullmodel)
bootMer(fullmodel, FUN, nsim=1)
FUN <- function(fit) {return(fixef(fit))}
bootMer(fullmodel, FUN, nsim=1)
fullmodel <- lmer(value ~ testnum*stereotyped*interventcond + (testnum|subjectnum), df.melt, REML=F)
simu <- sim(fullmodel, n.sims=1000)
simu <- sim(fullmodel, n = 1000)
simu <- sim(fullmodel, n=1000)
?sim
fm2 <- update(fullmodel, .~ testnum*stereotyped + testnum*interventcond + (testnum|subjectnum), df.melt)
fullmodel <- lmer(value ~ testnum*stereotyped*interventcond + (testnum|subjectnum), df.melt, REML=F)
simu <- sim(fullmodel, n=1000)
is.na(fullmodel)
fullmodel
bootMer(fullmodel, FUN=function(x) as.numeric(logLik(x)), nsim=100)
bfull<-bootMer(fullmodel, FUN=function(x) as.numeric(logLik(x)), nsim=100)
random.intercept <- lmer(value ~ testnum*stereotyped*interventcond + (1|subjectnum), df.melt, REML=F))
random.intercept <- lmer(value ~ testnum*stereotyped*interventcond + (1|subjectnum), df.melt, REML=F)
binter<-bootMer(random.intercept, FUN=function(x) as.numeric(logLik(x)), nsim=100)
bfull
binter
bfull$t
logLik(fullmodel)
logLik(random.inter)
logLik(random.intercept)
lrt<-as.numeric(-2*logLik(fullmodel) + 2 * logLik(random.intercept))
lrt
lrt.boot<-as.numeric(-2*logLik(bfull) + 2*logLik(binter))
lrt.boot<-as.numeric(-2*bfull$t + 2*binter$t)
lrt.boot
quantile(lrt.boot)
quantile(lrt.b, probs=c(.025, .975))
quantile(lrt.boot, probs=c(.025, .975))
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line(color="#144256") +
facet_grid(interventcond~stereotyped)
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line(color="#144256") +
theme_bw() + ylab("Performance") +
facet_grid(interventcond~stereotyped) +
theme(plot.title=element_text(size=10, face='bold'),
axis.title.x=element_text(size=10)
axis.text.x=element_blank(),
axis.title.y=element_text(face='bold', size=12),
axis.text.y=element_text(size=10))
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line(color="#144256") +
theme_bw() + ylab("Performance") +
facet_grid(interventcond~stereotyped) +
theme(plot.title=element_text(size=10, face='bold'),
axis.title.x=element_text(size=10),
axis.text.x=element_blank(),
axis.title.y=element_text(face='bold', size=12),
axis.text.y=element_text(size=10))
factor(interventcond)
factor(df.melt$interventcond)
df.melt$interventcond <- factor(df.melt$interventcond, levels=c('Self', 'Group', 'Control'))
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line(color="#144256") +
theme_bw() + ylab("Performance") +
facet_grid(interventcond~stereotyped) +
theme(plot.title=element_text(size=10, face='bold'),
axis.title.x=element_text(size=10),
axis.text.x=element_blank(),
axis.title.y=element_text(face='bold', size=12),
axis.text.y=element_text(size=10))
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line(color="#144256") +
theme_bw() + ylab("Performance") +
facet_grid(interventcond~stereotyped) +
theme(plot.title=element_text(size=10, face='bold'),
axis.title.x=element_text(size=10),
axis.text.x=element_blank(),
axis.title.y=element_text(face='bold', size=12),
axis.text.y=element_text(size=10))
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line(color="#144256") +
theme_bw() + ylab("Performance") +
facet_grid(interventcond~stereotyped) +
theme(plot.title=element_text(size=10, face='bold'),
axis.title.x=element_text(size=10),
axis.text.x=element_blank(),
axis.title.y=element_text(face='bold', size=12),
axis.text.y=element_text(size=10))
names(df.melt)
interventcond
df.melt$interventcond
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
levels(df.melt$variable) <- c('test1', 'test2', 'test3')
df.melt$testnum <- as.numeric(df.melt$variable)
df.melt$interventcond <- factor(df.melt$interventcond, levels=c('Self', 'Group', 'Control'))
levels(df.melt$interventcond)
df.melt$interventcond
df.melt <- melt(df, id.vars = c('subjectnum', 'interventcond', 'stereotyped'), measure.vars=c('test1numCorrectofAnswer', 'test2numCorrectofAnswer', 'test3numCorrectofAnswer'))
levels(df.melt$variable) <- c('test1', 'test2', 'test3')
df.melt$testnum <- as.numeric(df.melt$variable)
df.melt$interventcond
levels(df.melt$interventcond)
levels(df.melt$interventcond) <-  c('Self', 'Group', 'Control)
levels(df.melt$interventcond) <-  c('Self', 'Group', 'Control')
levels(df.melt$interventcond) <-  c('Self', 'Group', 'Control')
df.melt$interventcond
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line(color="#144256") +
theme_bw() + ylab("Performance") +
facet_grid(interventcond~stereotyped) +
theme(plot.title=element_text(size=10, face='bold'),
axis.title.x=element_text(size=10),
axis.text.x=element_blank(),
axis.title.y=element_text(face='bold', size=12),
axis.text.y=element_text(size=10))
plot<-ggplot(na.omit(df.melt), aes(x=variable, y=value, group=subjectnum))
plot+geom_line(color="#144256") +
theme_bw() + ylab("Performance") +
facet_grid(interventcond~stereotyped) +
theme(plot.title=element_text(size=10, face='bold'),
axis.title.x=element_blank(),
axis.text.x=element_text(size=10),
axis.title.y=element_text(face='bold', size=12),
axis.text.y=element_text(size=10))
fixef(coef(fullmodel))
fixef(fullmodel)
length(fixef(fullmodel))
