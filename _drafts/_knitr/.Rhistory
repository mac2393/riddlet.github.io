df.pit$std.sv <- scale(log.sv)
#[which(df.pit$sv > 0)] <- scale(df.pit$sv[which(df.pit$sv > 0)])
#logged because of the skew
df.pit$std.k <- scale(log(df.pit$k))
df.pit$std.era <- scale(df.pit$era)*-1
df.pit$std.whip <- scale(df.pit$whip)*-1
df.pit$ip.weight <- df.pit$ip/mean(df.pit$ip, na.rm=T)
df.pit$std.w.era <- scale(df.pit$era/df.pit$ip.weight)*-1
df.pit$std.w.whip <- scale(df.pit$whip/df.pit$ip.weight)*-1
df.pit$perf.index <- rowSums(df.pit[,c(4:8)], na.rm=T)
df.pit<-arrange(df.pit, desc(perf.index))
df.pit[1:20,c(1:3, 17:22)]
df.pit[50:60, c(1:3, 17:22)]
ggplot(df.pit, aes(x=perf.index, fill = position, group = position)) +
geom_density(alpha = .5) +
scale_fill_manual(values = c('#144256', '#88301B')) +
theme_bw()
library(ggplot2)
ggplot(df.pit, aes(x=std.w, fill = position, group = position)) +
geom_density(alpha = .5) +
scale_fill_manual(values = c('#144256', '#88301B')) +
theme_bw() +
ggtitle('Wins')
ggplot(df.pit, aes(x=std.sv, fill = position, group = position)) +
geom_density(alpha = .5) +
scale_fill_manual(values = c('#144256', '#88301B')) +
theme_bw() +
ggtitle('Saves')
ggplot(df.pit, aes(x=std.k, fill = position, group = position)) +
geom_density(alpha = .5) +
scale_fill_manual(values = c('#144256', '#88301B')) +
theme_bw() +
ggtitle('Strikeouts')
ggplot(df.pit, aes(x=std.w.era, fill = position, group = position)) +
geom_density(alpha = .5) +
scale_fill_manual(values = c('#144256', '#88301B')) +
theme_bw() +
ggtitle('Weighted ERA')
ggplot(df.pit, aes(x=std.w.whip, fill = position, group = position)) +
geom_density(alpha = .5) +
scale_fill_manual(values = c('#144256', '#88301B')) +
theme_bw() +
ggtitle('Weighted WHIP')
df.pit$std.w.whip <- (scale(df.pit$whip)/df.pit$ip.weight)*-1
ggplot(df.pit, aes(x=std.w.whip, fill = position, group = position)) +
geom_density(alpha = .5) +
scale_fill_manual(values = c('#144256', '#88301B')) +
theme_bw() +
ggtitle('Weighted WHIP')
1.5/.5
df.pit$std.w.whip <- (scale(df.pit$whip/df.pit$ip.weight)*-1
ggplot(df.pit, aes(x=std.w.whip, fill = position, group = position)) +
geom_density(alpha = .5) +
scale_fill_manual(values = c('#144256', '#88301B')) +
theme_bw() +
ggtitle('Weighted WHIP')
df.pit$std.w.whip <- scale(df.pit$whip/df.pit$ip.weight)*-1
ggplot(df.pit, aes(x=std.w.whip, fill = position, group = position)) +
geom_density(alpha = .5) +
scale_fill_manual(values = c('#144256', '#88301B')) +
theme_bw() +
ggtitle('Weighted WHIP')
df.pit$std.w.whip <- scale(df.pit$whip*-1)/df.pit$ip.weight
ggplot(df.pit, aes(x=std.w.whip, fill = position, group = position)) +
geom_density(alpha = .5) +
scale_fill_manual(values = c('#144256', '#88301B')) +
theme_bw() +
ggtitle('Weighted WHIP')
1/.5
1/1
scale(-1)
df.pit$whip[1:5]
df.pit$whip[1:5]*-1
rev<-df.pit$whip[1:5]*-1
rev/df.pit$ip.weight
rev<-df.pit$whip*-1
rev/df.pit$ip.weight
scale(rev)/df.pit$ip.weight
fans.bat <- read.csv('../../../Data/Fans_batters.csv')
steamer.bat <- read.csv('../../../Data//Steamer_batters.csv')
zips.bat <- read.csv('../../../Data/ZIPS_batters.csv')
fans.pit <- read.csv('../../../Data//Fans_pitchers.csv')
steamer.pit <- read.csv('../../../Data/Steamer_pitchers.csv')
zips.pit <- read.csv('../../../Data/ZIPS_pitchers.csv')
library(dplyr)
#Rename variables so I know where they come from
names(fans.bat)[1:24] <- paste('fans', names(fans.bat)[1:24], sep='_')
names(steamer.bat)[1:29] <- paste('steamer', names(steamer.bat)[1:29],
sep='_')
names(zips.bat)[1:24] <- paste('zips', names(zips.bat)[1:24], sep='_')
#join by player id
bat <- full_join(fans.bat, steamer.bat, by='playerid')
bat <- full_join(bat, zips.bat, by='playerid')
#repeat for pitching
names(fans.pit)[1:19] <- paste('fans', names(fans.pit)[1:19], sep='_')
names(steamer.pit)[1:20] <- paste('steamer', names(steamer.pit)[1:20],
sep='_')
names(zips.pit)[1:18] <- paste('zips', names(zips.pit)[1:18], sep='_')
#join by player id
pit <- full_join(fans.pit, steamer.pit, by='playerid')
pit <- full_join(pit, zips.pit, by='playerid')
##Batting stats
bat$agg.runs <- apply(bat[,c('fans_R', 'steamer_R', 'fans_R')], 1,
function(x) mean(x, na.rm=T))
bat$agg.hr <- apply(bat[,c('fans_HR', 'steamer_HR', 'fans_HR')], 1,
function(x) mean(x, na.rm=T))
bat$agg.rbi <- apply(bat[,c('fans_RBI', 'steamer_RBI', 'fans_RBI')], 1,
function(x) mean(x, na.rm=T))
bat$agg.sb <- apply(bat[,c('fans_SB', 'steamer_SB', 'fans_SB')], 1,
function(x) mean(x, na.rm=T))
bat$agg.obp <- apply(bat[,c('fans_OBP', 'steamer_OBP', 'fans_OBP')], 1,
function(x) mean(x, na.rm=T))
#Singles are a bit trickier...
bat$fans_1b <- bat$fans_H - (bat$fans_X2B + bat$fans_X3B + bat$fans_HR)
bat$steamer_1b <- bat$steamer_H - (bat$steamer_X2B + bat$steamer_X3B +
bat$steamer_HR)
bat$zips_1b <- bat$zips_H - (bat$zips_X2B + bat$zips_X3B + bat$zips_HR)
bat$agg.1b <- apply(bat[,c('fans_1b', 'steamer_1b', 'fans_1b')], 1,
function(x) mean(x, na.rm=T))
bat$agg.2b <- apply(bat[,c('fans_X2B', 'steamer_X2B', 'fans_X2B')], 1,
function(x) mean(x, na.rm=T))
bat$agg.3b <- apply(bat[,c('fans_X3B', 'steamer_X3B', 'fans_X3B')], 1,
function(x) mean(x, na.rm=T))
bat$agg.bb <- apply(bat[,c('fans_BB', 'steamer_BB', 'fans_BB')], 1,
function(x) mean(x, na.rm=T))
bat$agg.avg <- apply(bat[,c('fans_AVG', 'steamer_AVG', 'fans_AVG')], 1,
function(x) mean(x, na.rm=T))
bat$agg.obp <- apply(bat[,c('fans_OBP', 'steamer_OBP', 'fans_OBP')], 1,
function(x) mean(x, na.rm=T))
bat$agg.ops <- apply(bat[,c('fans_OPS', 'steamer_OPS', 'fans_OPS')], 1,
function(x) mean(x, na.rm=T))
##Pitching stats
pit$agg.w <- apply(pit[,c('fans_W', 'steamer_W', 'zips_W')], 1, function(x)
mean(x, na.rm=T))
#zips doesn't forecast saves
pit$agg.sv <- apply(pit[,c('fans_SV', 'steamer_SV')], 1, function(x)
mean(x, na.rm=T))
pit$agg.k <- apply(pit[,c('fans_SO', 'steamer_SO', 'zips_SO')], 1, function(x)
mean(x, na.rm=T))
pit$agg.era <- apply(pit[,c('fans_ERA', 'steamer_ERA', 'zips_ERA')], 1,
function(x) mean(x, na.rm=T))
pit$agg.whip <- apply(pit[,c('fans_WHIP', 'steamer_WHIP', 'zips_WHIP')], 1,
function(x) mean(x, na.rm=T))
bat$agg.sd.runs <- apply(bat[,c('fans_R', 'steamer_R', 'fans_R')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.hr <- apply(bat[,c('fans_HR', 'steamer_HR', 'fans_HR')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.rbi <- apply(bat[,c('fans_RBI', 'steamer_RBI', 'fans_RBI')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.sb <- apply(bat[,c('fans_SB', 'steamer_SB', 'fans_SB')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.obp <- apply(bat[,c('fans_OBP', 'steamer_OBP', 'fans_OBP')], 1,
function(x) sd(x, na.rm=T))
#Singles are a bit trickier...
bat$fans_1b <- bat$fans_H - (bat$fans_X2B + bat$fans_X3B + bat$fans_HR)
bat$steamer_1b <- bat$steamer_H - (bat$steamer_X2B + bat$steamer_X3B +
bat$steamer_HR)
bat$zips_1b <- bat$zips_H - (bat$zips_X2B + bat$zips_X3B + bat$zips_HR)
bat$agg.sd.1b <- apply(bat[,c('fans_1b', 'steamer_1b', 'fans_1b')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.2b <- apply(bat[,c('fans_X2B', 'steamer_X2B', 'fans_X2B')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.3b <- apply(bat[,c('fans_X3B', 'steamer_X3B', 'fans_X3B')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.bb <- apply(bat[,c('fans_BB', 'steamer_BB', 'fans_BB')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.avg <- apply(bat[,c('fans_AVG', 'steamer_AVG', 'fans_AVG')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.obp <- apply(bat[,c('fans_OBP', 'steamer_OBP', 'fans_OBP')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.ops <- apply(bat[,c('fans_OPS', 'steamer_OPS', 'fans_OPS')], 1,
function(x) sd(x, na.rm=T))
##Pitching stats
pit$agg.sd.w <- apply(pit[,c('fans_W', 'steamer_W', 'zips_W')], 1, function(x)
sd(x, na.rm=T))
#zips doesn't forecast saves
pit$agg.sd.sv <- apply(pit[,c('fans_SV', 'steamer_SV')], 1, function(x) sd(x, na.rm=T))
pit$agg.sd.k <- apply(pit[,c('fans_SO', 'steamer_SO', 'zips_SO')], 1, function(x)
sd(x, na.rm=T))
pit$agg.sd.era <- apply(pit[,c('fans_ERA', 'steamer_ERA', 'zips_ERA')], 1,
function(x) sd(x, na.rm=T))
pit$agg.sd.whip <- apply(pit[,c('fans_WHIP', 'steamer_WHIP', 'zips_WHIP')], 1,
function(x) sd(x, na.rm=T))
bat$agg.pa <- apply(bat[,c('fans_PA', 'steamer_PA', 'zips_PA')], 1,
function(x) mean(x, na.rm=T))
pit$agg.ip <- apply(pit[,c('fans_IP', 'steamer_IP', 'zips_IP')], 1,
function(x) mean(x, na.rm=T))
bat$agg.sd.pa <- apply(bat[,c('fans_PA', 'steamer_PA', 'zips_PA')], 1,
function(x) sd(x, na.rm=T))
pit$agg.sd.ip <- apply(pit[,c('fans_IP', 'steamer_IP', 'zips_IP')], 1,
function(x) sd(x, na.rm=T))
bat$agg.pa[bat$agg.pa == 1] <- NA
bat$pa.weight <- bat$agg.pa/mean(bat$agg.pa, na.rm=T)
pit$agg.ip[pit$agg.ip == 1] <- NA
pit$ip.weight <- pit$agg.ip/mean(pit$agg.ip, na.rm=T)
#we're going to only focus on the people who are predicted to score more than one
#run.  This does away with quite a few problems
bat <- bat[bat$agg.runs > 0,]
bat$agg.runs.std <- scale(bat$agg.runs)
bat$agg.hr.std <- scale(bat$agg.hr)
bat$agg.rbi.std <- scale(bat$agg.rbi)
bat$agg.sb[bat$agg.sb==0] <- .5
log.sb <- log(bat$agg.sb)
bat$agg.sb.std <- scale(log.sb) # log it because the skew is severe
bat$agg.obp.std <- scale(bat$agg.obp)
bat$agg.w.obp.std <- scale(bat$agg.obp*bat$pa.weight)
bat$talent.index <- bat$agg.runs.std + bat$agg.hr.std + bat$agg.rbi.std + bat$agg.sb.std + bat$agg.w.obp.std
#only look at those with more than one strikeout
pit <- pit[pit$agg.k > 1,]
pit$agg.w[pit$agg.w==0] <- .5
log.w <- log(pit$agg.w)
pit$agg.w.std <- scale(log.w)
pit$agg.sv.std <- NA
pit$agg.sv.std[which(pit$agg.sv > 0)] <- scale(pit$agg.sv[which(pit$agg.sv > 0)])
#logged because of the skew
pit$agg.k.std <- scale(log(pit$agg.k))
pit$agg.era.std <- scale(pit$agg.era)*-1
pit$agg.whip.std <- scale(pit$agg.whip)*-1
pit$agg.w.era.std <- scale(pit$agg.era/pit$ip.weight)*-1
pit$agg.w.whip.std <- scale(pit$agg.whip/pit$ip.weight)*-1
pit$talent.index <- rowSums(pit[,c(72:74, 77,78)], na.rm=T)
pit.length <- length(pit$fans_Name)
bat.length <- length(bat$fans_Name)
combined <- data.frame(name=c(as.character(pit$fans_Name), as.character(bat$fans_Name)),
perf.index=c(scale(pit$talent.index), scale(bat$talent.index)),
std.w=c(pit$agg.w.std, rep(NA, bat.length)),
std.sv=c(pit$agg.sv.std, rep(NA, bat.length)),
std.k=c(pit$agg.k.std, rep(NA, bat.length)),
std.w.era=c(pit$agg.w.era.std, rep(NA, bat.length)),
std.w.whip=c(pit$agg.w.whip.std, rep(NA, bat.length)),
std.era=c(pit$agg.era.std, rep(NA, bat.length)),
std.whip=c(pit$agg.whip.std, rep(NA, bat.length)),
std.r=c(rep(NA, pit.length), bat$agg.runs.std),
std.hr=c(rep(NA, pit.length), bat$agg.hr.std),
std.rbi=c(rep(NA, pit.length), bat$agg.rbi.std),
std.sb=c(rep(NA, pit.length), bat$agg.sb.std),
std.obp=c(rep(NA, pit.length), bat$agg.obp.std),
std.w.obp=c(rep(NA, pit.length), bat$agg.w.obp.std),
ip=c(pit$agg.ip, rep(NA, bat.length)),
w=c(pit$agg.w, rep(NA, bat.length)),
sv=c(pit$agg.sv, rep(NA, bat.length)),
k=c(pit$agg.k, rep(NA, bat.length)),
era=c(pit$agg.era, rep(NA, bat.length)),
whip=c(pit$agg.whip, rep(NA, bat.length)),
pa=c(rep(NA, pit.length), bat$agg.pa),
r=c(rep(NA, pit.length), bat$agg.runs),
hr=c(rep(NA, pit.length), bat$agg.hr),
rbi=c(rep(NA, pit.length), bat$agg.rbi),
sb=c(rep(NA, pit.length), bat$agg.sb),
obp=c(rep(NA, pit.length), bat$agg.obp),
w.obp=c(rep(NA, pit.length), bat$agg.w.obp)
)
library(rvest)
library(magittr)
library(stringr)
library(car)
url <- html('http://fantasynews.cbssports.com/fantasybaseball/rankings/h2h/overall/yearly')
pos <- url %>%
html_nodes('td:nth-child(1) td+ td') %>%
html_text()
POS <- str_extract(pos, "\\(\\w{1,2}\\)")
name <- str_extract(pos, perl(".*(?=\\s.{1,3}\\()"))
POS <- gsub('\\(', '', POS)
POS <- gsub('\\)', '', POS)
df.id <- data.frame(name = name,
position = as.factor(POS))
df.id$position <- recode(df.id$position, "c('LF', 'RF', 'CF')='OF'")
df <- full_join(df.id, combined)
df.pit <- subset(df, df$position=='SP' | df$position=='RP')
df.bat <- df[-grep('.P', df$position), ]
rownames(df.pit) <- 1:nrow(df.pit)
rownames(df.bat) <- 1:nrow(df.bat)
df.pit[1:20,c(1:3, 17:22)]
df.pit[50:60, c(1:3, 17:22)]
df.pit[40:50, c(1:3, 17:22)]
df.pit[1:50, c(1:3, 17:22)]
setwd("~/Documents/Gits/riddlet.github.io/_drafts/_knitr")
fans.bat <- read.csv('../../../Data/Fans_batters.csv')
steamer.bat <- read.csv('../../../Data//Steamer_batters.csv')
zips.bat <- read.csv('../../../Data/ZIPS_batters.csv')
fans.pit <- read.csv('../../../Data//Fans_pitchers.csv')
steamer.pit <- read.csv('../../../Data/Steamer_pitchers.csv')
zips.pit <- read.csv('../../../Data/ZIPS_pitchers.csv')
library(dplyr)
#Rename variables so I know where they come from
names(fans.bat)[1:24] <- paste('fans', names(fans.bat)[1:24], sep='_')
names(steamer.bat)[1:29] <- paste('steamer', names(steamer.bat)[1:29],
sep='_')
names(zips.bat)[1:24] <- paste('zips', names(zips.bat)[1:24], sep='_')
#join by player id
bat <- full_join(fans.bat, steamer.bat, by='playerid')
bat <- full_join(bat, zips.bat, by='playerid')
#repeat for pitching
names(fans.pit)[1:19] <- paste('fans', names(fans.pit)[1:19], sep='_')
names(steamer.pit)[1:20] <- paste('steamer', names(steamer.pit)[1:20],
sep='_')
names(zips.pit)[1:18] <- paste('zips', names(zips.pit)[1:18], sep='_')
#join by player id
pit <- full_join(fans.pit, steamer.pit, by='playerid')
pit <- full_join(pit, zips.pit, by='playerid')
##Batting stats
bat$agg.runs <- apply(bat[,c('fans_R', 'steamer_R', 'fans_R')], 1,
function(x) mean(x, na.rm=T))
bat$agg.hr <- apply(bat[,c('fans_HR', 'steamer_HR', 'fans_HR')], 1,
function(x) mean(x, na.rm=T))
bat$agg.rbi <- apply(bat[,c('fans_RBI', 'steamer_RBI', 'fans_RBI')], 1,
function(x) mean(x, na.rm=T))
bat$agg.sb <- apply(bat[,c('fans_SB', 'steamer_SB', 'fans_SB')], 1,
function(x) mean(x, na.rm=T))
bat$agg.obp <- apply(bat[,c('fans_OBP', 'steamer_OBP', 'fans_OBP')], 1,
function(x) mean(x, na.rm=T))
#Singles are a bit trickier...
bat$fans_1b <- bat$fans_H - (bat$fans_X2B + bat$fans_X3B + bat$fans_HR)
bat$steamer_1b <- bat$steamer_H - (bat$steamer_X2B + bat$steamer_X3B +
bat$steamer_HR)
bat$zips_1b <- bat$zips_H - (bat$zips_X2B + bat$zips_X3B + bat$zips_HR)
bat$agg.1b <- apply(bat[,c('fans_1b', 'steamer_1b', 'fans_1b')], 1,
function(x) mean(x, na.rm=T))
bat$agg.2b <- apply(bat[,c('fans_X2B', 'steamer_X2B', 'fans_X2B')], 1,
function(x) mean(x, na.rm=T))
bat$agg.3b <- apply(bat[,c('fans_X3B', 'steamer_X3B', 'fans_X3B')], 1,
function(x) mean(x, na.rm=T))
bat$agg.bb <- apply(bat[,c('fans_BB', 'steamer_BB', 'fans_BB')], 1,
function(x) mean(x, na.rm=T))
bat$agg.avg <- apply(bat[,c('fans_AVG', 'steamer_AVG', 'fans_AVG')], 1,
function(x) mean(x, na.rm=T))
bat$agg.obp <- apply(bat[,c('fans_OBP', 'steamer_OBP', 'fans_OBP')], 1,
function(x) mean(x, na.rm=T))
bat$agg.ops <- apply(bat[,c('fans_OPS', 'steamer_OPS', 'fans_OPS')], 1,
function(x) mean(x, na.rm=T))
##Pitching stats
pit$agg.w <- apply(pit[,c('fans_W', 'steamer_W', 'zips_W')], 1, function(x)
mean(x, na.rm=T))
#zips doesn't forecast saves
pit$agg.sv <- apply(pit[,c('fans_SV', 'steamer_SV')], 1, function(x)
mean(x, na.rm=T))
pit$agg.k <- apply(pit[,c('fans_SO', 'steamer_SO', 'zips_SO')], 1, function(x)
mean(x, na.rm=T))
pit$agg.era <- apply(pit[,c('fans_ERA', 'steamer_ERA', 'zips_ERA')], 1,
function(x) mean(x, na.rm=T))
pit$agg.whip <- apply(pit[,c('fans_WHIP', 'steamer_WHIP', 'zips_WHIP')], 1,
function(x) mean(x, na.rm=T))
bat$agg.sd.runs <- apply(bat[,c('fans_R', 'steamer_R', 'fans_R')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.hr <- apply(bat[,c('fans_HR', 'steamer_HR', 'fans_HR')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.rbi <- apply(bat[,c('fans_RBI', 'steamer_RBI', 'fans_RBI')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.sb <- apply(bat[,c('fans_SB', 'steamer_SB', 'fans_SB')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.obp <- apply(bat[,c('fans_OBP', 'steamer_OBP', 'fans_OBP')], 1,
function(x) sd(x, na.rm=T))
#Singles are a bit trickier...
bat$fans_1b <- bat$fans_H - (bat$fans_X2B + bat$fans_X3B + bat$fans_HR)
bat$steamer_1b <- bat$steamer_H - (bat$steamer_X2B + bat$steamer_X3B +
bat$steamer_HR)
bat$zips_1b <- bat$zips_H - (bat$zips_X2B + bat$zips_X3B + bat$zips_HR)
bat$agg.sd.1b <- apply(bat[,c('fans_1b', 'steamer_1b', 'fans_1b')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.2b <- apply(bat[,c('fans_X2B', 'steamer_X2B', 'fans_X2B')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.3b <- apply(bat[,c('fans_X3B', 'steamer_X3B', 'fans_X3B')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.bb <- apply(bat[,c('fans_BB', 'steamer_BB', 'fans_BB')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.avg <- apply(bat[,c('fans_AVG', 'steamer_AVG', 'fans_AVG')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.obp <- apply(bat[,c('fans_OBP', 'steamer_OBP', 'fans_OBP')], 1,
function(x) sd(x, na.rm=T))
bat$agg.sd.ops <- apply(bat[,c('fans_OPS', 'steamer_OPS', 'fans_OPS')], 1,
function(x) sd(x, na.rm=T))
##Pitching stats
pit$agg.sd.w <- apply(pit[,c('fans_W', 'steamer_W', 'zips_W')], 1, function(x)
sd(x, na.rm=T))
#zips doesn't forecast saves
pit$agg.sd.sv <- apply(pit[,c('fans_SV', 'steamer_SV')], 1, function(x) sd(x, na.rm=T))
pit$agg.sd.k <- apply(pit[,c('fans_SO', 'steamer_SO', 'zips_SO')], 1, function(x)
sd(x, na.rm=T))
pit$agg.sd.era <- apply(pit[,c('fans_ERA', 'steamer_ERA', 'zips_ERA')], 1,
function(x) sd(x, na.rm=T))
pit$agg.sd.whip <- apply(pit[,c('fans_WHIP', 'steamer_WHIP', 'zips_WHIP')], 1,
function(x) sd(x, na.rm=T))
bat$agg.pa <- apply(bat[,c('fans_PA', 'steamer_PA', 'zips_PA')], 1,
function(x) mean(x, na.rm=T))
pit$agg.ip <- apply(pit[,c('fans_IP', 'steamer_IP', 'zips_IP')], 1,
function(x) mean(x, na.rm=T))
bat$agg.sd.pa <- apply(bat[,c('fans_PA', 'steamer_PA', 'zips_PA')], 1,
function(x) sd(x, na.rm=T))
pit$agg.sd.ip <- apply(pit[,c('fans_IP', 'steamer_IP', 'zips_IP')], 1,
function(x) sd(x, na.rm=T))
bat$agg.pa[bat$agg.pa == 1] <- NA
bat$pa.weight <- bat$agg.pa/mean(bat$agg.pa, na.rm=T)
pit$agg.ip[pit$agg.ip == 1] <- NA
pit$ip.weight <- pit$agg.ip/mean(pit$agg.ip, na.rm=T)
#we're going to only focus on the people who are predicted to score more than one
#run.  This does away with quite a few problems
bat <- bat[bat$agg.runs > 0,]
bat$agg.runs.std <- scale(bat$agg.runs)
bat$agg.hr.std <- scale(bat$agg.hr)
bat$agg.rbi.std <- scale(bat$agg.rbi)
bat$agg.sb[bat$agg.sb==0] <- .5
log.sb <- log(bat$agg.sb)
bat$agg.sb.std <- scale(log.sb) # log it because the skew is severe
bat$agg.obp.std <- scale(bat$agg.obp)
bat$agg.w.obp.std <- scale(bat$agg.obp*bat$pa.weight)
bat$talent.index <- bat$agg.runs.std + bat$agg.hr.std + bat$agg.rbi.std + bat$agg.sb.std + bat$agg.w.obp.std
#only look at those with more than one strikeout
pit <- pit[pit$agg.k > 1,]
pit$agg.w[pit$agg.w==0] <- .5
log.w <- log(pit$agg.w)
pit$agg.w.std <- scale(log.w)
pit$agg.sv.std <- NA
pit$agg.sv.std[which(pit$agg.sv > 0)] <- scale(pit$agg.sv[which(pit$agg.sv > 0)])
#logged because of the skew
pit$agg.k.std <- scale(log(pit$agg.k))
pit$agg.era.std <- scale(pit$agg.era)*-1
pit$agg.whip.std <- scale(pit$agg.whip)*-1
pit$agg.w.era.std <- scale(pit$agg.era/pit$ip.weight)*-1
pit$agg.w.whip.std <- scale(pit$agg.whip/pit$ip.weight)*-1
pit$talent.index <- rowSums(pit[,c(72:74, 77,78)], na.rm=T)
pit.length <- length(pit$fans_Name)
bat.length <- length(bat$fans_Name)
combined <- data.frame(name=c(as.character(pit$fans_Name), as.character(bat$fans_Name)),
perf.index=c(scale(pit$talent.index), scale(bat$talent.index)),
std.w=c(pit$agg.w.std, rep(NA, bat.length)),
std.sv=c(pit$agg.sv.std, rep(NA, bat.length)),
std.k=c(pit$agg.k.std, rep(NA, bat.length)),
std.w.era=c(pit$agg.w.era.std, rep(NA, bat.length)),
std.w.whip=c(pit$agg.w.whip.std, rep(NA, bat.length)),
std.era=c(pit$agg.era.std, rep(NA, bat.length)),
std.whip=c(pit$agg.whip.std, rep(NA, bat.length)),
std.r=c(rep(NA, pit.length), bat$agg.runs.std),
std.hr=c(rep(NA, pit.length), bat$agg.hr.std),
std.rbi=c(rep(NA, pit.length), bat$agg.rbi.std),
std.sb=c(rep(NA, pit.length), bat$agg.sb.std),
std.obp=c(rep(NA, pit.length), bat$agg.obp.std),
std.w.obp=c(rep(NA, pit.length), bat$agg.w.obp.std),
ip=c(pit$agg.ip, rep(NA, bat.length)),
w=c(pit$agg.w, rep(NA, bat.length)),
sv=c(pit$agg.sv, rep(NA, bat.length)),
k=c(pit$agg.k, rep(NA, bat.length)),
era=c(pit$agg.era, rep(NA, bat.length)),
whip=c(pit$agg.whip, rep(NA, bat.length)),
pa=c(rep(NA, pit.length), bat$agg.pa),
r=c(rep(NA, pit.length), bat$agg.runs),
hr=c(rep(NA, pit.length), bat$agg.hr),
rbi=c(rep(NA, pit.length), bat$agg.rbi),
sb=c(rep(NA, pit.length), bat$agg.sb),
obp=c(rep(NA, pit.length), bat$agg.obp),
w.obp=c(rep(NA, pit.length), bat$agg.w.obp)
)
library(rvest)
library(magittr)
library(stringr)
library(car)
url <- html('http://fantasynews.cbssports.com/fantasybaseball/rankings/h2h/overall/yearly')
pos <- url %>%
html_nodes('td:nth-child(1) td+ td') %>%
html_text()
POS <- str_extract(pos, "\\(\\w{1,2}\\)")
name <- str_extract(pos, perl(".*(?=\\s.{1,3}\\()"))
POS <- gsub('\\(', '', POS)
POS <- gsub('\\)', '', POS)
df.id <- data.frame(name = name,
position = as.factor(POS))
df.id$position <- recode(df.id$position, "c('LF', 'RF', 'CF')='OF'")
df <- full_join(df.id, combined)
df.pit <- subset(df, df$position=='SP' | df$position=='RP')
df.bat <- df[-grep('.P', df$position), ]
rownames(df.pit) <- 1:nrow(df.pit)
rownames(df.bat) <- 1:nrow(df.bat)
df.pit[1:20,c(1:3, 17:22)]
df.pit[1:50, c(1:3, 17:22)]
df.pit<-arrange(df.pit, desc(perf.index))
df.pit[1:50, c(1:3, 17:22)]
df.pit[1:60, c(1:3, 17:22)]
(
library(ggplot2)
ggplot(df.pit, aes(x=perf.index, fill = position, group = position)) +
geom_density(alpha = .5) +
scale_fill_manual(values = c('#144256', '#88301B')) +
theme_bw()
library(ggplot2)
ggplot(df.pit, aes(x=perf.index, fill = position, group = position)) +
geom_density(alpha = .5) +
scale_fill_manual(values = c('#144256', '#88301B')) +
theme_bw()
ggplot(df.pit, aes(x=std.w, fill = position, group = position)) +
geom_density(alpha = .5) +
scale_fill_manual(values = c('#144256', '#88301B')) +
theme_bw() +
ggtitle('Wins')
ggplot(df.pit, aes(x=std.sv, fill = position, group = position)) +
geom_density(alpha = .5) +
scale_fill_manual(values = c('#144256', '#88301B')) +
theme_bw() +
ggtitle('Saves')
ggplot(df.pit, aes(x=std.k, fill = position, group = position)) +
geom_density(alpha = .5) +
scale_fill_manual(values = c('#144256', '#88301B')) +
theme_bw() +
ggtitle('Strikeouts')
ggplot(df.pit, aes(x=std.w.era, fill = position, group = position)) +
geom_density(alpha = .5) +
scale_fill_manual(values = c('#144256', '#88301B')) +
theme_bw() +
ggtitle('Weighted ERA')
ggplot(df.pit, aes(x=std.w.whip, fill = position, group = position)) +
geom_density(alpha = .5) +
scale_fill_manual(values = c('#144256', '#88301B')) +
theme_bw() +
ggtitle('Weighted WHIP')
